// gShell is licensed under the GNU GENERAL PUBLIC LICENSE, Version 3
//
// http://www.gnu.org/licenses/gpl-3.0.en.html
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// gShell is based upon https://github.com/google/google-api-dotnet-client, which is licensed under the Apache 2.0
// license: https://github.com/google/google-api-dotnet-client/blob/master/LICENSE
//
// gShell is reliant upon the Google Apis. Please see the specific API pages for specific licensing information.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a fork of google-apis-code-generator:
//       https://github.com/squid808/apis-client-generator
//
//     How neat is that? Pretty neat.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;

using Google.Apis.admin.Directory.directory_v1;
using Google.Apis.admin.Directory.directory_v1.Data;

using gDirectory = gShell.dotNet.Directory;

namespace gShell.Cmdlets.Directory
{
    /// <summary>A base class which provides support for service account integration and schema objects.</summary>
    public abstract class DirectoryServiceAccountBase : DirectoryBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">The email account to be targeted by the service account.</para>
        /// </summary>
        [Parameter(Mandatory = false)]
        [ValidateNotNullOrEmpty]
        public string TargetUserEmail { get; set; }
        #endregion

        protected override void BeginProcessing()
        {
            gShellServiceAccount = TargetUserEmail;

            base.BeginProcessing();
        }
    }

    

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserName object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserName object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserName</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserNameObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserNameObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserNameObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserName))]
    public class NewGDirectoryUserNameObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Last Name</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Last Name")]
        public string FamilyName { get; set; }

        /// <summary>
        /// <para type="description">Full Name</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Full Name")]
        public string FullName { get; set; }

        /// <summary>
        /// <para type="description">First Name</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "First Name")]
        public string GivenName { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserName()
            {
                FamilyName = this.FamilyName,
                FullName = this.FullName,
                GivenName = this.GivenName,
            };

            if (ShouldProcess("UserName"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserExternalId object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserExternalId object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserExternalId</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserExternalIdObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserExternalIdObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserExternalIdObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserExternalId))]
    public class NewGDirectoryUserExternalIdObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Custom type.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom type.")]
        public string CustomType { get; set; }

        /// <summary>
        /// <para type="description">The type of the Id.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The type of the Id.")]
        public string Type { get; set; }

        /// <summary>
        /// <para type="description">The value of the id.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The value of the id.")]
        public string Value { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserExternalId()
            {
                CustomType = this.CustomType,
                Type = this.Type,
                Value = this.Value,
            };

            if (ShouldProcess("UserExternalId"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Group object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Group object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Group</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryGroupObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryGroupObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryGroupObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Group))]
    public class NewGDirectoryGroupObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Is the group created by admin (Read-only) *</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Is the group created by admin (Read-only) *")]
        public System.Nullable<bool> AdminCreated { get; set; }

        /// <summary>
        /// <para type="description">List of aliases (Read-only)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of aliases (Read-only)")]
        public System.Collections.Generic.IList<string> Aliases { get; set; }

        /// <summary>
        /// <para type="description">Description of the group</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Description of the group")]
        public string Description { get; set; }

        /// <summary>
        /// <para type="description">Group direct members count</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Group direct members count")]
        public System.Nullable<long> DirectMembersCount { get; set; }

        /// <summary>
        /// <para type="description">Email of Group</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email of Group")]
        public string Email { get; set; }

        /// <summary>
        /// <para type="description">Unique identifier of Group (Read-only)</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique identifier of Group (Read-only)")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">Group name</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Group name")]
        public string Name { get; set; }

        /// <summary>
        /// <para type="description">List of non editable aliases (Read-only)</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of non editable aliases (Read-only)")]
        public System.Collections.Generic.IList<string> NonEditableAliases { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Group()
            {
                AdminCreated = this.AdminCreated,
                Aliases = this.Aliases,
                Description = this.Description,
                DirectMembersCount = this.DirectMembersCount,
                Email = this.Email,
                Id = this.Id,
                Name = this.Name,
                NonEditableAliases = this.NonEditableAliases,
            };

            if (ShouldProcess("Group"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Notification object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Notification object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Notification</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryNotificationObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryNotificationObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryNotificationObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Notification))]
    public class NewGDirectoryNotificationObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Body of the notification (Read-only)</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Body of the notification (Read-only)")]
        public string Body { get; set; }

        /// <summary>
        /// <para type="description">Address from which the notification is received (Read-only)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Address from which the notification is received (Read-only)")]
        public string FromAddress { get; set; }

        /// <summary>
        /// <para type="description">Boolean indicating whether the notification is unread or not.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean indicating whether the notification is unread or not.")]
        public System.Nullable<bool> IsUnread { get; set; }


        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public string NotificationId { get; set; }

        /// <summary>
        /// <para type="description">Time at which notification was sent (Read-only)</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Time at which notification was sent (Read-only)")]
        public System.Nullable<System.DateTime> SendTime { get; set; }

        /// <summary>
        /// <para type="description">Subject of the notification (Read-only)</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Subject of the notification (Read-only)")]
        public string Subject { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Notification()
            {
                Body = this.Body,
                FromAddress = this.FromAddress,
                IsUnread = this.IsUnread,
                NotificationId = this.NotificationId,
                SendTime = this.SendTime,
                Subject = this.Subject,
            };

            if (ShouldProcess("Notification"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserWebsite object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserWebsite object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserWebsite</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserWebsiteObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserWebsiteObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserWebsiteObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserWebsite))]
    public class NewGDirectoryUserWebsiteObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Custom Type.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom Type.")]
        public string CustomType { get; set; }

        /// <summary>
        /// <para type="description">If this is user's primary website or not.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If this is user's primary website or not.")]
        public System.Nullable<bool> Primary { get; set; }

        /// <summary>
        /// <para type="description">Each entry can have a type which indicates standard types of that entry. For example website could be of home, work, blog etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Each entry can have a type which indicates standard types of that entry. For example website could be of home, work, blog etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.")]
        public string Type { get; set; }

        /// <summary>
        /// <para type="description">Website.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Website.")]
        public string Value { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserWebsite()
            {
                CustomType = this.CustomType,
                Primary = this.Primary,
                Type = this.Type,
                Value = this.Value,
            };

            if (ShouldProcess("UserWebsite"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Role.RolePrivilegesData object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Role.RolePrivilegesData object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Role.RolePrivilegesData</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryRoleRolePrivilegesDataObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryRole.RolePrivilegesDataObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryRoleRolePrivilegesDataObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Role.RolePrivilegesData))]
    public class NewGDirectoryRoleRolePrivilegesDataObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The name of the privilege.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The name of the privilege.")]
        public string PrivilegeName { get; set; }

        /// <summary>
        /// <para type="description">The obfuscated ID of the service this privilege is for.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The obfuscated ID of the service this privilege is for.")]
        public string ServiceId { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Role.RolePrivilegesData()
            {
                PrivilegeName = this.PrivilegeName,
                ServiceId = this.ServiceId,
            };

            if (ShouldProcess("Role.RolePrivilegesData"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API SchemaFieldSpec object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a SchemaFieldSpec object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.SchemaFieldSpec</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectorySchemaFieldSpecObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectorySchemaFieldSpecObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectorySchemaFieldSpecObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.SchemaFieldSpec))]
    public class NewGDirectorySchemaFieldSpecObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Unique identifier of Field (Read-only)</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique identifier of Field (Read-only)")]
        public string FieldId { get; set; }

        /// <summary>
        /// <para type="description">Name of the field.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the field.")]
        public string FieldName { get; set; }

        /// <summary>
        /// <para type="description">Type of the field.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Type of the field.")]
        public string FieldType { get; set; }

        /// <summary>
        /// <para type="description">Boolean specifying whether the field is indexed or not.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean specifying whether the field is indexed or not.")]
        public System.Nullable<bool> Indexed { get; set; }

        /// <summary>
        /// <para type="description">Boolean specifying whether this is a multi-valued field or not.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean specifying whether this is a multi-valued field or not.")]
        public System.Nullable<bool> MultiValued { get; set; }

        /// <summary>
        /// <para type="description">Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the numericIndexingSpec allows range queries to be supported.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the numericIndexingSpec allows range queries to be supported.")]
        public SchemaFieldSpec.NumericIndexingSpecData NumericIndexingSpec { get; set; }

        /// <summary>
        /// <para type="description">Read ACLs on the field specifying who can view values of this field. Valid values are "ALL_DOMAIN_USERS" and "ADMINS_AND_SELF".</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Read ACLs on the field specifying who can view values of this field. Valid values are \"ALL_DOMAIN_USERS\" and \"ADMINS_AND_SELF\".")]
        public string ReadAccessType { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.SchemaFieldSpec()
            {
                FieldId = this.FieldId,
                FieldName = this.FieldName,
                FieldType = this.FieldType,
                Indexed = this.Indexed,
                MultiValued = this.MultiValued,
                NumericIndexingSpec = this.NumericIndexingSpec,
                ReadAccessType = this.ReadAccessType,
            };

            if (ShouldProcess("SchemaFieldSpec"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Member object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Member object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Member</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryMemberObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryMemberObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryMemberObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Member))]
    public class NewGDirectoryMemberObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email of member (Read-only)</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email of member (Read-only)")]
        public string Email { get; set; }

        /// <summary>
        /// <para type="description">Unique identifier of customer member (Read-only) Unique identifier of group (Read-only) Unique identifier of member (Read-only)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique identifier of customer member (Read-only) Unique identifier of group (Read-only) Unique identifier of member (Read-only)")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">Role of member</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Role of member")]
        public string Role { get; set; }

        /// <summary>
        /// <para type="description">Type of member (Immutable)</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Type of member (Immutable)")]
        public string Type { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Member()
            {
                Email = this.Email,
                Id = this.Id,
                Role = this.Role,
                Type = this.Type,
            };

            if (ShouldProcess("Member"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API MobileDeviceAction object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a MobileDeviceAction object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.MobileDeviceAction</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryMobileDeviceActionObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryMobileDeviceActionObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryMobileDeviceActionObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.MobileDeviceAction))]
    public class NewGDirectoryMobileDeviceActionObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Action to be taken on the Mobile Device</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Action to be taken on the Mobile Device")]
        public string Action { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.MobileDeviceAction()
            {
                Action = this.Action,
            };

            if (ShouldProcess("MobileDeviceAction"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Alias object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Alias object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Alias</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryAliasObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryAliasObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryAliasObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Alias))]
    public class NewGDirectoryAliasObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">A alias email</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A alias email")]
        public string AliasValue { get; set; }

        /// <summary>
        /// <para type="description">Unique id of the group (Read-only) Unique id of the user (Read-only)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique id of the group (Read-only) Unique id of the user (Read-only)")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">Group's primary email (Read-only) User's primary email (Read-only)</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Group's primary email (Read-only) User's primary email (Read-only)")]
        public string PrimaryEmail { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Alias()
            {
                AliasValue = this.AliasValue,
                Id = this.Id,
                PrimaryEmail = this.PrimaryEmail,
            };

            if (ShouldProcess("Alias"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Role object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Role object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Role</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryRoleObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryRoleObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryRoleObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Role))]
    public class NewGDirectoryRoleObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Returns true if the role is a super admin role.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Returns true if the role is a super admin role.")]
        public System.Nullable<bool> IsSuperAdminRole { get; set; }

        /// <summary>
        /// <para type="description">Returns true if this is a pre-defined system role.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Returns true if this is a pre-defined system role.")]
        public System.Nullable<bool> IsSystemRole { get; set; }

        /// <summary>
        /// <para type="description">A short description of the role.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A short description of the role.")]
        public string RoleDescription { get; set; }

        /// <summary>
        /// <para type="description">ID of the role.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "ID of the role.")]
        public System.Nullable<long> RoleId { get; set; }

        /// <summary>
        /// <para type="description">Name of the role.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the role.")]
        public string RoleName { get; set; }

        /// <summary>
        /// <para type="description">The set of privileges that are granted to this role.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The set of privileges that are granted to this role.")]
        public System.Collections.Generic.IList<Role.RolePrivilegesData> RolePrivileges { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Role()
            {
                IsSuperAdminRole = this.IsSuperAdminRole,
                IsSystemRole = this.IsSystemRole,
                RoleDescription = this.RoleDescription,
                RoleId = this.RoleId,
                RoleName = this.RoleName,
                RolePrivileges = this.RolePrivileges,
            };

            if (ShouldProcess("Role"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Privilege object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Privilege object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Privilege</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryPrivilegeObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryPrivilegeObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryPrivilegeObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Privilege))]
    public class NewGDirectoryPrivilegeObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">A list of child privileges. Privileges for a service form a tree. Each privilege can have a list of child privileges; this list is empty for a leaf privilege.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A list of child privileges. Privileges for a service form a tree. Each privilege can have a list of child privileges; this list is empty for a leaf privilege.")]
        public System.Collections.Generic.IList<Privilege> ChildPrivileges { get; set; }

        /// <summary>
        /// <para type="description">If the privilege can be restricted to an organization unit.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If the privilege can be restricted to an organization unit.")]
        public System.Nullable<bool> IsOuScopable { get; set; }

        /// <summary>
        /// <para type="description">The name of the privilege.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The name of the privilege.")]
        public string PrivilegeName { get; set; }

        /// <summary>
        /// <para type="description">The obfuscated ID of the service this privilege is for.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The obfuscated ID of the service this privilege is for.")]
        public string ServiceId { get; set; }

        /// <summary>
        /// <para type="description">The name of the service this privilege is for.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The name of the service this privilege is for.")]
        public string ServiceName { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Privilege()
            {
                ChildPrivileges = this.ChildPrivileges,
                IsOuScopable = this.IsOuScopable,
                PrivilegeName = this.PrivilegeName,
                ServiceId = this.ServiceId,
                ServiceName = this.ServiceName,
            };

            if (ShouldProcess("Privilege"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API CalendarResource object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a CalendarResource object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.CalendarResource</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryCalendarResourceObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryCalendarResourceObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryCalendarResourceObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.CalendarResource))]
    public class NewGDirectoryCalendarResourceObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">ETag of the resource.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "ETag of the resource.")]
        public string Etags { get; set; }

        /// <summary>
        /// <para type="description">The brief description of the calendar resource.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The brief description of the calendar resource.")]
        public string ResourceDescription { get; set; }

        /// <summary>
        /// <para type="description">The read-only email ID for the calendar resource. Generated as part of creating a new calendar resource.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The read-only email ID for the calendar resource. Generated as part of creating a new calendar resource.")]
        public string ResourceEmail { get; set; }

        /// <summary>
        /// <para type="description">The unique ID for the calendar resource.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the calendar resource.")]
        public string ResourceId { get; set; }

        /// <summary>
        /// <para type="description">The name of the calendar resource. For example, Training Room 1A</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The name of the calendar resource. For example, Training Room 1A")]
        public string ResourceName { get; set; }

        /// <summary>
        /// <para type="description">The type of the calendar resource. Used for grouping resources in the calendar user interface.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The type of the calendar resource. Used for grouping resources in the calendar user interface.")]
        public string ResourceType { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.CalendarResource()
            {
                Etags = this.Etags,
                ResourceDescription = this.ResourceDescription,
                ResourceEmail = this.ResourceEmail,
                ResourceId = this.ResourceId,
                ResourceName = this.ResourceName,
                ResourceType = this.ResourceType,
            };

            if (ShouldProcess("CalendarResource"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API ChromeOsDevice.ActiveTimeRangesData object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a ChromeOsDevice.ActiveTimeRangesData object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice.ActiveTimeRangesData</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryChromeOsDeviceActiveTimeRangesDataObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryChromeOsDevice.ActiveTimeRangesDataObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryChromeOsDeviceActiveTimeRangesDataObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice.ActiveTimeRangesData))]
    public class NewGDirectoryChromeOsDeviceActiveTimeRangesDataObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Duration in milliseconds</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Duration in milliseconds")]
        public System.Nullable<int> ActiveTime { get; set; }

        /// <summary>
        /// <para type="description">Date of usage</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Date of usage")]
        public string Date { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice.ActiveTimeRangesData()
            {
                ActiveTime = this.ActiveTime,
                Date = this.Date,
            };

            if (ShouldProcess("ChromeOsDevice.ActiveTimeRangesData"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API CustomerPostalAddress object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a CustomerPostalAddress object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.CustomerPostalAddress</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryCustomerPostalAddressObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryCustomerPostalAddressObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryCustomerPostalAddressObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.CustomerPostalAddress))]
    public class NewGDirectoryCustomerPostalAddressObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">A customer's physical address. The address can be composed of one to three lines.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A customer's physical address. The address can be composed of one to three lines.")]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// <para type="description">Address line 2 of the address.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Address line 2 of the address.")]
        public string AddressLine2 { get; set; }

        /// <summary>
        /// <para type="description">Address line 3 of the address.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Address line 3 of the address.")]
        public string AddressLine3 { get; set; }

        /// <summary>
        /// <para type="description">The customer contact's name.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The customer contact's name.")]
        public string ContactName { get; set; }

        /// <summary>
        /// <para type="description">This is a required property. For countryCode information see the ISO 3166 country code elements.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "This is a required property. For countryCode information see the ISO 3166 country code elements.")]
        public string CountryCode { get; set; }

        /// <summary>
        /// <para type="description">Name of the locality. An example of a locality value is the city of San Francisco.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the locality. An example of a locality value is the city of San Francisco.")]
        public string Locality { get; set; }

        /// <summary>
        /// <para type="description">The company or company division name.</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The company or company division name.")]
        public string OrganizationName { get; set; }

        /// <summary>
        /// <para type="description">The postal code. A postalCode example is a postal zip code such as 10009. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element.</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The postal code. A postalCode example is a postal zip code such as 10009. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element.")]
        public string PostalCode { get; set; }

        /// <summary>
        /// <para type="description">Name of the region. An example of a region value is NY for the state of New York.</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the region. An example of a region value is NY for the state of New York.")]
        public string Region { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.CustomerPostalAddress()
            {
                AddressLine1 = this.AddressLine1,
                AddressLine2 = this.AddressLine2,
                AddressLine3 = this.AddressLine3,
                ContactName = this.ContactName,
                CountryCode = this.CountryCode,
                Locality = this.Locality,
                OrganizationName = this.OrganizationName,
                PostalCode = this.PostalCode,
                Region = this.Region,
            };

            if (ShouldProcess("CustomerPostalAddress"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Channel object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Channel object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Channel</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryChannelObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryChannelObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryChannelObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Channel))]
    public class NewGDirectoryChannelObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The address where notifications are delivered for this channel.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The address where notifications are delivered for this channel.")]
        public string Address { get; set; }

        /// <summary>
        /// <para type="description">Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.")]
        public System.Nullable<long> Expiration { get; set; }

        /// <summary>
        /// <para type="description">A UUID or similar unique string that identifies this channel.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A UUID or similar unique string that identifies this channel.")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">Additional parameters controlling delivery channel behavior. Optional.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Additional parameters controlling delivery channel behavior. Optional.")]
        public System.Collections.Generic.IDictionary<string,string> Params__ { get; set; }

        /// <summary>
        /// <para type="description">A Boolean value to indicate whether payload is wanted. Optional.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A Boolean value to indicate whether payload is wanted. Optional.")]
        public System.Nullable<bool> Payload { get; set; }

        /// <summary>
        /// <para type="description">An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.")]
        public string ResourceId { get; set; }

        /// <summary>
        /// <para type="description">A version-specific identifier for the watched resource.</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A version-specific identifier for the watched resource.")]
        public string ResourceUri { get; set; }

        /// <summary>
        /// <para type="description">An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.")]
        public string Token { get; set; }

        /// <summary>
        /// <para type="description">The type of delivery mechanism used for this channel.</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The type of delivery mechanism used for this channel.")]
        public string Type { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Channel()
            {
                Address = this.Address,
                Expiration = this.Expiration,
                Id = this.Id,
                Params__ = this.Params__,
                Payload = this.Payload,
                ResourceId = this.ResourceId,
                ResourceUri = this.ResourceUri,
                Token = this.Token,
                Type = this.Type,
            };

            if (ShouldProcess("Channel"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserAddress object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserAddress object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserAddress</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserAddressObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserAddressObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserAddressObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserAddress))]
    public class NewGDirectoryUserAddressObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Country.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Country.")]
        public string Country { get; set; }

        /// <summary>
        /// <para type="description">Country code.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Country code.")]
        public string CountryCode { get; set; }

        /// <summary>
        /// <para type="description">Custom type.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom type.")]
        public string CustomType { get; set; }

        /// <summary>
        /// <para type="description">Extended Address.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Extended Address.")]
        public string ExtendedAddress { get; set; }

        /// <summary>
        /// <para type="description">Formatted address.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Formatted address.")]
        public string Formatted { get; set; }

        /// <summary>
        /// <para type="description">Locality.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Locality.")]
        public string Locality { get; set; }

        /// <summary>
        /// <para type="description">Other parts of address.</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Other parts of address.")]
        public string PoBox { get; set; }

        /// <summary>
        /// <para type="description">Postal code.</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Postal code.")]
        public string PostalCode { get; set; }

        /// <summary>
        /// <para type="description">If this is user's primary address. Only one entry could be marked as primary.</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If this is user's primary address. Only one entry could be marked as primary.")]
        public System.Nullable<bool> Primary { get; set; }

        /// <summary>
        /// <para type="description">Region.</para>
        /// </summary>
        [Parameter(Position = 9,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Region.")]
        public string Region { get; set; }

        /// <summary>
        /// <para type="description">User supplied address was structured. Structured addresses are NOT supported at this time. You might be able to write structured addresses, but any values will eventually be clobbered.</para>
        /// </summary>
        [Parameter(Position = 10,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "User supplied address was structured. Structured addresses are NOT supported at this time. You might be able to write structured addresses, but any values will eventually be clobbered.")]
        public System.Nullable<bool> SourceIsStructured { get; set; }

        /// <summary>
        /// <para type="description">Street.</para>
        /// </summary>
        [Parameter(Position = 11,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Street.")]
        public string StreetAddress { get; set; }

        /// <summary>
        /// <para type="description">Each entry can have a type which indicates standard values of that entry. For example address could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such type should have the CUSTOM value as type and also have a customType value.</para>
        /// </summary>
        [Parameter(Position = 12,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Each entry can have a type which indicates standard values of that entry. For example address could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such type should have the CUSTOM value as type and also have a customType value.")]
        public string Type { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserAddress()
            {
                Country = this.Country,
                CountryCode = this.CountryCode,
                CustomType = this.CustomType,
                ExtendedAddress = this.ExtendedAddress,
                Formatted = this.Formatted,
                Locality = this.Locality,
                PoBox = this.PoBox,
                PostalCode = this.PostalCode,
                Primary = this.Primary,
                Region = this.Region,
                SourceIsStructured = this.SourceIsStructured,
                StreetAddress = this.StreetAddress,
                Type = this.Type,
            };

            if (ShouldProcess("UserAddress"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Asp object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Asp object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Asp</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryAspObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryAspObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryAspObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Asp))]
    public class NewGDirectoryAspObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID of the ASP.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the ASP.")]
        public System.Nullable<int> CodeId { get; set; }

        /// <summary>
        /// <para type="description">The time when the ASP was created. Expressed in Unix time format.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The time when the ASP was created. Expressed in Unix time format.")]
        public System.Nullable<long> CreationTime { get; set; }

        /// <summary>
        /// <para type="description">The time when the ASP was last used. Expressed in Unix time format.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The time when the ASP was last used. Expressed in Unix time format.")]
        public System.Nullable<long> LastTimeUsed { get; set; }

        /// <summary>
        /// <para type="description">The name of the application that the user, represented by their userId, entered when the ASP was created.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The name of the application that the user, represented by their userId, entered when the ASP was created.")]
        public string Name { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the user who issued the ASP.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the user who issued the ASP.")]
        public string UserKey { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Asp()
            {
                CodeId = this.CodeId,
                CreationTime = this.CreationTime,
                LastTimeUsed = this.LastTimeUsed,
                Name = this.Name,
                UserKey = this.UserKey,
            };

            if (ShouldProcess("Asp"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserIm object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserIm object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserIm</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserImObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserImObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserImObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserIm))]
    public class NewGDirectoryUserImObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Custom protocol.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom protocol.")]
        public string CustomProtocol { get; set; }

        /// <summary>
        /// <para type="description">Custom type.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom type.")]
        public string CustomType { get; set; }

        /// <summary>
        /// <para type="description">Instant messenger id.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Instant messenger id.")]
        public string Im { get; set; }

        /// <summary>
        /// <para type="description">If this is user's primary im. Only one entry could be marked as primary.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If this is user's primary im. Only one entry could be marked as primary.")]
        public System.Nullable<bool> Primary { get; set; }

        /// <summary>
        /// <para type="description">Protocol used in the instant messenger. It should be one of the values from ImProtocolTypes map. Similar to type, it can take a CUSTOM value and specify the custom name in customProtocol field.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Protocol used in the instant messenger. It should be one of the values from ImProtocolTypes map. Similar to type, it can take a CUSTOM value and specify the custom name in customProtocol field.")]
        public string Protocol { get; set; }

        /// <summary>
        /// <para type="description">Each entry can have a type which indicates standard types of that entry. For example instant messengers could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such types should have the CUSTOM value as type and also have a customType value.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Each entry can have a type which indicates standard types of that entry. For example instant messengers could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such types should have the CUSTOM value as type and also have a customType value.")]
        public string Type { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserIm()
            {
                CustomProtocol = this.CustomProtocol,
                CustomType = this.CustomType,
                Im = this.Im,
                Primary = this.Primary,
                Protocol = this.Protocol,
                Type = this.Type,
            };

            if (ShouldProcess("UserIm"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserOrganization object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserOrganization object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserOrganization</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserOrganizationObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserOrganizationObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserOrganizationObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserOrganization))]
    public class NewGDirectoryUserOrganizationObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The cost center of the users department.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The cost center of the users department.")]
        public string CostCenter { get; set; }

        /// <summary>
        /// <para type="description">Custom type.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom type.")]
        public string CustomType { get; set; }

        /// <summary>
        /// <para type="description">Department within the organization.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Department within the organization.")]
        public string Department { get; set; }

        /// <summary>
        /// <para type="description">Description of the organization.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Description of the organization.")]
        public string Description { get; set; }

        /// <summary>
        /// <para type="description">The domain to which the organization belongs to.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The domain to which the organization belongs to.")]
        public string Domain { get; set; }

        /// <summary>
        /// <para type="description">Location of the organization. This need not be fully qualified address.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Location of the organization. This need not be fully qualified address.")]
        public string Location { get; set; }

        /// <summary>
        /// <para type="description">Name of the organization</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the organization")]
        public string Name { get; set; }

        /// <summary>
        /// <para type="description">If it user's primary organization.</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If it user's primary organization.")]
        public System.Nullable<bool> Primary { get; set; }

        /// <summary>
        /// <para type="description">Symbol of the organization.</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Symbol of the organization.")]
        public string Symbol { get; set; }

        /// <summary>
        /// <para type="description">Title (designation) of the user in the organization.</para>
        /// </summary>
        [Parameter(Position = 9,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Title (designation) of the user in the organization.")]
        public string Title { get; set; }

        /// <summary>
        /// <para type="description">Each entry can have a type which indicates standard types of that entry. For example organization could be of school, work etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a CustomType value.</para>
        /// </summary>
        [Parameter(Position = 10,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Each entry can have a type which indicates standard types of that entry. For example organization could be of school, work etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a CustomType value.")]
        public string Type { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserOrganization()
            {
                CostCenter = this.CostCenter,
                CustomType = this.CustomType,
                Department = this.Department,
                Description = this.Description,
                Domain = this.Domain,
                Location = this.Location,
                Name = this.Name,
                Primary = this.Primary,
                Symbol = this.Symbol,
                Title = this.Title,
                Type = this.Type,
            };

            if (ShouldProcess("UserOrganization"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserMakeAdmin object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserMakeAdmin object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserMakeAdmin</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserMakeAdminObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserMakeAdminObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserMakeAdminObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserMakeAdmin))]
    public class NewGDirectoryUserMakeAdminObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Boolean indicating new admin status of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean indicating new admin status of the user")]
        public System.Nullable<bool> Status { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserMakeAdmin()
            {
                Status = this.Status,
            };

            if (ShouldProcess("UserMakeAdmin"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API DomainAlias object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a DomainAlias object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.DomainAlias</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryDomainAliasObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryDomainAliasObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryDomainAliasObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.DomainAlias))]
    public class NewGDirectoryDomainAliasObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The creation time of the domain alias. (Read-only).</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The creation time of the domain alias. (Read-only).")]
        public System.Nullable<long> CreationTime { get; set; }

        /// <summary>
        /// <para type="description">The domain alias name.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The domain alias name.")]
        public string DomainAliasName { get; set; }

        /// <summary>
        /// <para type="description">The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.")]
        public string ParentDomainName { get; set; }

        /// <summary>
        /// <para type="description">Indicates the verification state of a domain alias. (Read-only)</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Indicates the verification state of a domain alias. (Read-only)")]
        public System.Nullable<bool> Verified { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.DomainAlias()
            {
                CreationTime = this.CreationTime,
                DomainAliasName = this.DomainAliasName,
                ParentDomainName = this.ParentDomainName,
                Verified = this.Verified,
            };

            if (ShouldProcess("DomainAlias"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API ChromeOsDevice object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a ChromeOsDevice object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryChromeOsDeviceObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryChromeOsDeviceObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryChromeOsDeviceObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice))]
    public class NewGDirectoryChromeOsDeviceObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">List of active time ranges (Read-only)</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of active time ranges (Read-only)")]
        public System.Collections.Generic.IList<ChromeOsDevice.ActiveTimeRangesData> ActiveTimeRanges { get; set; }

        /// <summary>
        /// <para type="description">AssetId specified during enrollment or through later annotation</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "AssetId specified during enrollment or through later annotation")]
        public string AnnotatedAssetId { get; set; }

        /// <summary>
        /// <para type="description">Address or location of the device as noted by the administrator</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Address or location of the device as noted by the administrator")]
        public string AnnotatedLocation { get; set; }

        /// <summary>
        /// <para type="description">User of the device</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "User of the device")]
        public string AnnotatedUser { get; set; }

        /// <summary>
        /// <para type="description">Chromebook boot mode (Read-only)</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook boot mode (Read-only)")]
        public string BootMode { get; set; }

        /// <summary>
        /// <para type="description">Unique identifier of Chrome OS Device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique identifier of Chrome OS Device (Read-only)")]
        public string DeviceId { get; set; }

        /// <summary>
        /// <para type="description">Chromebook Mac Address on ethernet network interface (Read-only)</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook Mac Address on ethernet network interface (Read-only)")]
        public string EthernetMacAddress { get; set; }

        /// <summary>
        /// <para type="description">Chromebook firmware version (Read-only)</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook firmware version (Read-only)")]
        public string FirmwareVersion { get; set; }

        /// <summary>
        /// <para type="description">Date and time the device was last enrolled (Read-only)</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Date and time the device was last enrolled (Read-only)")]
        public System.Nullable<System.DateTime> LastEnrollmentTime { get; set; }

        /// <summary>
        /// <para type="description">Date and time the device was last synchronized with the policy settings in the Google Apps administrator control panel (Read-only)</para>
        /// </summary>
        [Parameter(Position = 9,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Date and time the device was last synchronized with the policy settings in the Google Apps administrator control panel (Read-only)")]
        public System.Nullable<System.DateTime> LastSync { get; set; }

        /// <summary>
        /// <para type="description">Chromebook Mac Address on wifi network interface (Read-only)</para>
        /// </summary>
        [Parameter(Position = 10,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook Mac Address on wifi network interface (Read-only)")]
        public string MacAddress { get; set; }

        /// <summary>
        /// <para type="description">Mobile Equipment identifier for the 3G mobile card in the Chromebook (Read-only)</para>
        /// </summary>
        [Parameter(Position = 11,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Equipment identifier for the 3G mobile card in the Chromebook (Read-only)")]
        public string Meid { get; set; }

        /// <summary>
        /// <para type="description">Chromebook Model (Read-only)</para>
        /// </summary>
        [Parameter(Position = 12,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook Model (Read-only)")]
        public string Model { get; set; }

        /// <summary>
        /// <para type="description">Notes added by the administrator</para>
        /// </summary>
        [Parameter(Position = 13,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Notes added by the administrator")]
        public string Notes { get; set; }

        /// <summary>
        /// <para type="description">Chromebook order number (Read-only)</para>
        /// </summary>
        [Parameter(Position = 14,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook order number (Read-only)")]
        public string OrderNumber { get; set; }

        /// <summary>
        /// <para type="description">OrgUnit of the device</para>
        /// </summary>
        [Parameter(Position = 15,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "OrgUnit of the device")]
        public string OrgUnitPath { get; set; }

        /// <summary>
        /// <para type="description">Chromebook Os Version (Read-only)</para>
        /// </summary>
        [Parameter(Position = 16,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook Os Version (Read-only)")]
        public string OsVersion { get; set; }

        /// <summary>
        /// <para type="description">Chromebook platform version (Read-only)</para>
        /// </summary>
        [Parameter(Position = 17,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook platform version (Read-only)")]
        public string PlatformVersion { get; set; }

        /// <summary>
        /// <para type="description">List of recent device users, in descending order by last login time (Read-only)</para>
        /// </summary>
        [Parameter(Position = 18,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of recent device users, in descending order by last login time (Read-only)")]
        public System.Collections.Generic.IList<ChromeOsDevice.RecentUsersData> RecentUsers { get; set; }

        /// <summary>
        /// <para type="description">Chromebook serial number (Read-only)</para>
        /// </summary>
        [Parameter(Position = 19,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Chromebook serial number (Read-only)")]
        public string SerialNumber { get; set; }

        /// <summary>
        /// <para type="description">status of the device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 20,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "status of the device (Read-only)")]
        public string Status { get; set; }

        /// <summary>
        /// <para type="description">Final date the device will be supported (Read-only)</para>
        /// </summary>
        [Parameter(Position = 21,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Final date the device will be supported (Read-only)")]
        public System.Nullable<System.DateTime> SupportEndDate { get; set; }

        /// <summary>
        /// <para type="description">Will Chromebook auto renew after support end date (Read-only)</para>
        /// </summary>
        [Parameter(Position = 22,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Will Chromebook auto renew after support end date (Read-only)")]
        public System.Nullable<bool> WillAutoRenew { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice()
            {
                ActiveTimeRanges = this.ActiveTimeRanges,
                AnnotatedAssetId = this.AnnotatedAssetId,
                AnnotatedLocation = this.AnnotatedLocation,
                AnnotatedUser = this.AnnotatedUser,
                BootMode = this.BootMode,
                DeviceId = this.DeviceId,
                EthernetMacAddress = this.EthernetMacAddress,
                FirmwareVersion = this.FirmwareVersion,
                LastEnrollmentTime = this.LastEnrollmentTime,
                LastSync = this.LastSync,
                MacAddress = this.MacAddress,
                Meid = this.Meid,
                Model = this.Model,
                Notes = this.Notes,
                OrderNumber = this.OrderNumber,
                OrgUnitPath = this.OrgUnitPath,
                OsVersion = this.OsVersion,
                PlatformVersion = this.PlatformVersion,
                RecentUsers = this.RecentUsers,
                SerialNumber = this.SerialNumber,
                Status = this.Status,
                SupportEndDate = this.SupportEndDate,
                WillAutoRenew = this.WillAutoRenew,
            };

            if (ShouldProcess("ChromeOsDevice"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API User object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a User object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.User</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.User))]
    public class NewGDirectoryUserObj : PSCmdlet
    {
        #region Properties



        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object Addresses { get; set; }

        /// <summary>
        /// <para type="description">Indicates if user has agreed to terms (Read-only)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Indicates if user has agreed to terms (Read-only)")]
        public System.Nullable<bool> AgreedToTerms { get; set; }

        /// <summary>
        /// <para type="description">List of aliases (Read-only)</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of aliases (Read-only)")]
        public System.Collections.Generic.IList<string> Aliases { get; set; }

        /// <summary>
        /// <para type="description">Boolean indicating if the user should change password in next login</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean indicating if the user should change password in next login")]
        public System.Nullable<bool> ChangePasswordAtNextLogin { get; set; }

        /// <summary>
        /// <para type="description">User's Google account creation time. (Read-only)</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "User's Google account creation time. (Read-only)")]
        public System.Nullable<System.DateTime> CreationTime { get; set; }

        /// <summary>
        /// <para type="description">Custom fields of the user.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom fields of the user.")]
        public System.Collections.Generic.IDictionary<string,System.Collections.Generic.IDictionary<string,object>> CustomSchemas { get; set; }

        /// <summary>
        /// <para type="description">CustomerId of User (Read-only)</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "CustomerId of User (Read-only)")]
        public string CustomerId { get; set; }


        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public System.Nullable<System.DateTime> DeletionTime { get; set; }


        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object Emails { get; set; }


        [Parameter(Position = 9,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object ExternalIds { get; set; }

        /// <summary>
        /// <para type="description">Hash function name for password. Supported are MD5, SHA-1 and crypt</para>
        /// </summary>
        [Parameter(Position = 10,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Hash function name for password. Supported are MD5, SHA-1 and crypt")]
        public string HashFunction { get; set; }

        /// <summary>
        /// <para type="description">Unique identifier of User (Read-only)</para>
        /// </summary>
        [Parameter(Position = 11,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique identifier of User (Read-only)")]
        public string Id { get; set; }


        [Parameter(Position = 12,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object Ims { get; set; }

        /// <summary>
        /// <para type="description">Boolean indicating if user is included in Global Address List</para>
        /// </summary>
        [Parameter(Position = 13,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean indicating if user is included in Global Address List")]
        public System.Nullable<bool> IncludeInGlobalAddressList { get; set; }

        /// <summary>
        /// <para type="description">Boolean indicating if ip is whitelisted</para>
        /// </summary>
        [Parameter(Position = 14,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean indicating if ip is whitelisted")]
        public System.Nullable<bool> IpWhitelisted { get; set; }

        /// <summary>
        /// <para type="description">Boolean indicating if the user is admin (Read-only)</para>
        /// </summary>
        [Parameter(Position = 15,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean indicating if the user is admin (Read-only)")]
        public System.Nullable<bool> IsAdmin { get; set; }

        /// <summary>
        /// <para type="description">Boolean indicating if the user is delegated admin (Read-only)</para>
        /// </summary>
        [Parameter(Position = 16,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean indicating if the user is delegated admin (Read-only)")]
        public System.Nullable<bool> IsDelegatedAdmin { get; set; }

        /// <summary>
        /// <para type="description">Is mailbox setup (Read-only)</para>
        /// </summary>
        [Parameter(Position = 17,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Is mailbox setup (Read-only)")]
        public System.Nullable<bool> IsMailboxSetup { get; set; }

        /// <summary>
        /// <para type="description">User's last login time. (Read-only)</para>
        /// </summary>
        [Parameter(Position = 18,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "User's last login time. (Read-only)")]
        public System.Nullable<System.DateTime> LastLoginTime { get; set; }

        /// <summary>
        /// <para type="description">User's name</para>
        /// </summary>
        [Parameter(Position = 19,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "User's name")]
        public UserName Name { get; set; }

        /// <summary>
        /// <para type="description">List of non editable aliases (Read-only)</para>
        /// </summary>
        [Parameter(Position = 20,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of non editable aliases (Read-only)")]
        public System.Collections.Generic.IList<string> NonEditableAliases { get; set; }


        [Parameter(Position = 21,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object Notes { get; set; }

        /// <summary>
        /// <para type="description">OrgUnit of User</para>
        /// </summary>
        [Parameter(Position = 22,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "OrgUnit of User")]
        public string OrgUnitPath { get; set; }


        [Parameter(Position = 23,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object Organizations { get; set; }

        /// <summary>
        /// <para type="description">User's password</para>
        /// </summary>
        [Parameter(Position = 24,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "User's password")]
        public string Password { get; set; }


        [Parameter(Position = 25,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object Phones { get; set; }

        /// <summary>
        /// <para type="description">username of User</para>
        /// </summary>
        [Parameter(Position = 26,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "username of User")]
        public string PrimaryEmail { get; set; }


        [Parameter(Position = 27,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object Relations { get; set; }

        /// <summary>
        /// <para type="description">Indicates if user is suspended</para>
        /// </summary>
        [Parameter(Position = 28,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Indicates if user is suspended")]
        public System.Nullable<bool> Suspended { get; set; }

        /// <summary>
        /// <para type="description">Suspension reason if user is suspended (Read-only)</para>
        /// </summary>
        [Parameter(Position = 29,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Suspension reason if user is suspended (Read-only)")]
        public string SuspensionReason { get; set; }

        /// <summary>
        /// <para type="description">ETag of the user's photo (Read-only)</para>
        /// </summary>
        [Parameter(Position = 30,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "ETag of the user's photo (Read-only)")]
        public string ThumbnailPhotoEtag { get; set; }

        /// <summary>
        /// <para type="description">Photo Url of the user (Read-only)</para>
        /// </summary>
        [Parameter(Position = 31,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Photo Url of the user (Read-only)")]
        public string ThumbnailPhotoUrl { get; set; }


        [Parameter(Position = 32,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true)]
        public object Websites { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.User()
            {
                Addresses = this.Addresses,
                AgreedToTerms = this.AgreedToTerms,
                Aliases = this.Aliases,
                ChangePasswordAtNextLogin = this.ChangePasswordAtNextLogin,
                CreationTime = this.CreationTime,
                CustomSchemas = this.CustomSchemas,
                CustomerId = this.CustomerId,
                DeletionTime = this.DeletionTime,
                Emails = this.Emails,
                ExternalIds = this.ExternalIds,
                HashFunction = this.HashFunction,
                Id = this.Id,
                Ims = this.Ims,
                IncludeInGlobalAddressList = this.IncludeInGlobalAddressList,
                IpWhitelisted = this.IpWhitelisted,
                IsAdmin = this.IsAdmin,
                IsDelegatedAdmin = this.IsDelegatedAdmin,
                IsMailboxSetup = this.IsMailboxSetup,
                LastLoginTime = this.LastLoginTime,
                Name = this.Name,
                NonEditableAliases = this.NonEditableAliases,
                Notes = this.Notes,
                OrgUnitPath = this.OrgUnitPath,
                Organizations = this.Organizations,
                Password = this.Password,
                Phones = this.Phones,
                PrimaryEmail = this.PrimaryEmail,
                Relations = this.Relations,
                Suspended = this.Suspended,
                SuspensionReason = this.SuspensionReason,
                ThumbnailPhotoEtag = this.ThumbnailPhotoEtag,
                ThumbnailPhotoUrl = this.ThumbnailPhotoUrl,
                Websites = this.Websites,
            };

            if (ShouldProcess("User"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API MobileDevice.ApplicationsData object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a MobileDevice.ApplicationsData object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.MobileDevice.ApplicationsData</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryMobileDeviceApplicationsDataObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryMobileDevice.ApplicationsDataObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryMobileDeviceApplicationsDataObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.MobileDevice.ApplicationsData))]
    public class NewGDirectoryMobileDeviceApplicationsDataObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Display name of application</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Display name of application")]
        public string DisplayName { get; set; }

        /// <summary>
        /// <para type="description">Package name of application</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Package name of application")]
        public string PackageName { get; set; }

        /// <summary>
        /// <para type="description">List of Permissions for application</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of Permissions for application")]
        public System.Collections.Generic.IList<string> Permission { get; set; }

        /// <summary>
        /// <para type="description">Version code of application</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Version code of application")]
        public System.Nullable<int> VersionCode { get; set; }

        /// <summary>
        /// <para type="description">Version name of application</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Version name of application")]
        public string VersionName { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.MobileDevice.ApplicationsData()
            {
                DisplayName = this.DisplayName,
                PackageName = this.PackageName,
                Permission = this.Permission,
                VersionCode = this.VersionCode,
                VersionName = this.VersionName,
            };

            if (ShouldProcess("MobileDevice.ApplicationsData"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Schema object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Schema object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Schema</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectorySchemaObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectorySchemaObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectorySchemaObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Schema))]
    public class NewGDirectorySchemaObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Fields of Schema</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Fields of Schema")]
        public System.Collections.Generic.IList<SchemaFieldSpec> Fields { get; set; }

        /// <summary>
        /// <para type="description">Unique identifier of Schema (Read-only)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique identifier of Schema (Read-only)")]
        public string SchemaId { get; set; }

        /// <summary>
        /// <para type="description">Schema name</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Schema name")]
        public string SchemaName { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Schema()
            {
                Fields = this.Fields,
                SchemaId = this.SchemaId,
                SchemaName = this.SchemaName,
            };

            if (ShouldProcess("Schema"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Customer object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Customer object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Customer</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryCustomerObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryCustomerObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryCustomerObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Customer))]
    public class NewGDirectoryCustomerObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The customer's secondary contact email address. This email address cannot be on the same domain as the customerDomain</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The customer's secondary contact email address. This email address cannot be on the same domain as the customerDomain")]
        public string AlternateEmail { get; set; }

        /// <summary>
        /// <para type="description">The customer's creation time (Readonly)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The customer's creation time (Readonly)")]
        public System.Nullable<System.DateTime> CustomerCreationTime { get; set; }

        /// <summary>
        /// <para type="description">The customer's primary domain name string. Do not include the www prefix when creating a new customer.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The customer's primary domain name string. Do not include the www prefix when creating a new customer.")]
        public string CustomerDomain { get; set; }

        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. (Readonly)</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. (Readonly)")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">The customer's ISO 639-2 language code. The default value is en-US</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The customer's ISO 639-2 language code. The default value is en-US")]
        public string Language { get; set; }

        /// <summary>
        /// <para type="description">The customer's contact phone number in E.164 format.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The customer's contact phone number in E.164 format.")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// <para type="description">The customer's postal address information.</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The customer's postal address information.")]
        public CustomerPostalAddress PostalAddress { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Customer()
            {
                AlternateEmail = this.AlternateEmail,
                CustomerCreationTime = this.CustomerCreationTime,
                CustomerDomain = this.CustomerDomain,
                Id = this.Id,
                Language = this.Language,
                PhoneNumber = this.PhoneNumber,
                PostalAddress = this.PostalAddress,
            };

            if (ShouldProcess("Customer"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserUndelete object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserUndelete object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserUndelete</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserUndeleteObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserUndeleteObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserUndeleteObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserUndelete))]
    public class NewGDirectoryUserUndeleteObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">OrgUnit of User</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "OrgUnit of User")]
        public string OrgUnitPath { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserUndelete()
            {
                OrgUnitPath = this.OrgUnitPath,
            };

            if (ShouldProcess("UserUndelete"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserAbout object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserAbout object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserAbout</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserAboutObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserAboutObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserAboutObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserAbout))]
    public class NewGDirectoryUserAboutObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">About entry can have a type which indicates the content type. It can either be plain or html. By default, notes contents are assumed to contain plain text.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "About entry can have a type which indicates the content type. It can either be plain or html. By default, notes contents are assumed to contain plain text.")]
        public string ContentType { get; set; }

        /// <summary>
        /// <para type="description">Actual value of notes.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Actual value of notes.")]
        public string Value { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserAbout()
            {
                ContentType = this.ContentType,
                Value = this.Value,
            };

            if (ShouldProcess("UserAbout"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API ChromeOsDevice.RecentUsersData object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a ChromeOsDevice.RecentUsersData object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice.RecentUsersData</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryChromeOsDeviceRecentUsersDataObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryChromeOsDevice.RecentUsersDataObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryChromeOsDeviceRecentUsersDataObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice.RecentUsersData))]
    public class NewGDirectoryChromeOsDeviceRecentUsersDataObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email address of the user. Present only if the user type is managed</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email address of the user. Present only if the user type is managed")]
        public string Email { get; set; }

        /// <summary>
        /// <para type="description">The type of the user</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The type of the user")]
        public string Type { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice.RecentUsersData()
            {
                Email = this.Email,
                Type = this.Type,
            };

            if (ShouldProcess("ChromeOsDevice.RecentUsersData"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserPhoto object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserPhoto object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserPhoto</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserPhotoObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserPhotoObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserPhotoObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserPhoto))]
    public class NewGDirectoryUserPhotoObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Height in pixels of the photo</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Height in pixels of the photo")]
        public System.Nullable<int> Height { get; set; }

        /// <summary>
        /// <para type="description">Unique identifier of User (Read-only)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique identifier of User (Read-only)")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">Mime Type of the photo</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mime Type of the photo")]
        public string MimeType { get; set; }

        /// <summary>
        /// <para type="description">Base64 encoded photo data</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Base64 encoded photo data")]
        public string PhotoData { get; set; }

        /// <summary>
        /// <para type="description">Primary email of User (Read-only)</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Primary email of User (Read-only)")]
        public string PrimaryEmail { get; set; }

        /// <summary>
        /// <para type="description">Width in pixels of the photo</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Width in pixels of the photo")]
        public System.Nullable<int> Width { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserPhoto()
            {
                Height = this.Height,
                Id = this.Id,
                MimeType = this.MimeType,
                PhotoData = this.PhotoData,
                PrimaryEmail = this.PrimaryEmail,
                Width = this.Width,
            };

            if (ShouldProcess("UserPhoto"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Domains object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Domains object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Domains</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryDomainsObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryDomainsObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryDomainsObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Domains))]
    public class NewGDirectoryDomainsObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Creation time of the domain. (Read-only).</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Creation time of the domain. (Read-only).")]
        public System.Nullable<long> CreationTime { get; set; }

        /// <summary>
        /// <para type="description">List of domain alias objects. (Read-only)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of domain alias objects. (Read-only)")]
        public System.Collections.Generic.IList<DomainAlias> DomainAliases { get; set; }

        /// <summary>
        /// <para type="description">The domain name of the customer.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The domain name of the customer.")]
        public string DomainName { get; set; }

        /// <summary>
        /// <para type="description">Indicates if the domain is a primary domain (Read-only).</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Indicates if the domain is a primary domain (Read-only).")]
        public System.Nullable<bool> IsPrimary { get; set; }

        /// <summary>
        /// <para type="description">Indicates the verification state of a domain. (Read-only).</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Indicates the verification state of a domain. (Read-only).")]
        public System.Nullable<bool> Verified { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Domains()
            {
                CreationTime = this.CreationTime,
                DomainAliases = this.DomainAliases,
                DomainName = this.DomainName,
                IsPrimary = this.IsPrimary,
                Verified = this.Verified,
            };

            if (ShouldProcess("Domains"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Token object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Token object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Token</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryTokenObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryTokenObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryTokenObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Token))]
    public class NewGDirectoryTokenObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Whether the application is registered with Google. The value is true if the application has an anonymous Client ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether the application is registered with Google. The value is true if the application has an anonymous Client ID.")]
        public System.Nullable<bool> Anonymous { get; set; }

        /// <summary>
        /// <para type="description">The Client ID of the application the token is issued to.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The Client ID of the application the token is issued to.")]
        public string ClientId { get; set; }

        /// <summary>
        /// <para type="description">The displayable name of the application the token is issued to.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The displayable name of the application the token is issued to.")]
        public string DisplayText { get; set; }

        /// <summary>
        /// <para type="description">Whether the token is issued to an installed application. The value is true if the application is installed to a desktop or mobile device.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether the token is issued to an installed application. The value is true if the application is installed to a desktop or mobile device.")]
        public System.Nullable<bool> NativeApp { get; set; }

        /// <summary>
        /// <para type="description">A list of authorization scopes the application is granted.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A list of authorization scopes the application is granted.")]
        public System.Collections.Generic.IList<string> Scopes { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the user that issued the token.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the user that issued the token.")]
        public string UserKey { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Token()
            {
                Anonymous = this.Anonymous,
                ClientId = this.ClientId,
                DisplayText = this.DisplayText,
                NativeApp = this.NativeApp,
                Scopes = this.Scopes,
                UserKey = this.UserKey,
            };

            if (ShouldProcess("Token"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API RoleAssignment object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a RoleAssignment object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.RoleAssignment</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryRoleAssignmentObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryRoleAssignmentObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryRoleAssignmentObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.RoleAssignment))]
    public class NewGDirectoryRoleAssignmentObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID of the user this role is assigned to.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the user this role is assigned to.")]
        public string AssignedTo { get; set; }

        /// <summary>
        /// <para type="description">If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.")]
        public string OrgUnitId { get; set; }

        /// <summary>
        /// <para type="description">ID of this roleAssignment.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "ID of this roleAssignment.")]
        public System.Nullable<long> RoleAssignmentId { get; set; }

        /// <summary>
        /// <para type="description">The ID of the role that is assigned.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The ID of the role that is assigned.")]
        public System.Nullable<long> RoleId { get; set; }

        /// <summary>
        /// <para type="description">The scope in which this role is assigned. Possible values are:- CUSTOMER- ORG_UNIT</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The scope in which this role is assigned. Possible values are: \n- CUSTOMER\n- ORG_UNIT")]
        public string ScopeType { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.RoleAssignment()
            {
                AssignedTo = this.AssignedTo,
                OrgUnitId = this.OrgUnitId,
                RoleAssignmentId = this.RoleAssignmentId,
                RoleId = this.RoleId,
                ScopeType = this.ScopeType,
            };

            if (ShouldProcess("RoleAssignment"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserEmail object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserEmail object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserEmail</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserEmailObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserEmailObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserEmailObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserEmail))]
    public class NewGDirectoryUserEmailObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email id of the user.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email id of the user.")]
        public string Address { get; set; }

        /// <summary>
        /// <para type="description">Custom Type.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom Type.")]
        public string CustomType { get; set; }

        /// <summary>
        /// <para type="description">If this is user's primary email. Only one entry could be marked as primary.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If this is user's primary email. Only one entry could be marked as primary.")]
        public System.Nullable<bool> Primary { get; set; }

        /// <summary>
        /// <para type="description">Each entry can have a type which indicates standard types of that entry. For example email could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value Such types should have the CUSTOM value as type and also have a customType value.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Each entry can have a type which indicates standard types of that entry. For example email could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value Such types should have the CUSTOM value as type and also have a customType value.")]
        public string Type { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserEmail()
            {
                Address = this.Address,
                CustomType = this.CustomType,
                Primary = this.Primary,
                Type = this.Type,
            };

            if (ShouldProcess("UserEmail"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API MobileDevice object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a MobileDevice object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.MobileDevice</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryMobileDeviceObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryMobileDeviceObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryMobileDeviceObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.MobileDevice))]
    public class NewGDirectoryMobileDeviceObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Adb (USB debugging) enabled or disabled on device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Adb (USB debugging) enabled or disabled on device (Read-only)")]
        public System.Nullable<bool> AdbStatus { get; set; }

        /// <summary>
        /// <para type="description">List of applications installed on Mobile Device</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of applications installed on Mobile Device")]
        public System.Collections.Generic.IList<MobileDevice.ApplicationsData> Applications { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device Baseband version (Read-only)</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device Baseband version (Read-only)")]
        public string BasebandVersion { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device Build number (Read-only)</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device Build number (Read-only)")]
        public string BuildNumber { get; set; }

        /// <summary>
        /// <para type="description">The default locale used on the Mobile Device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The default locale used on the Mobile Device (Read-only)")]
        public string DefaultLanguage { get; set; }

        /// <summary>
        /// <para type="description">Developer options enabled or disabled on device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Developer options enabled or disabled on device (Read-only)")]
        public System.Nullable<bool> DeveloperOptionsStatus { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device compromised status (Read-only)</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device compromised status (Read-only)")]
        public string DeviceCompromisedStatus { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device serial number (Read-only)</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device serial number (Read-only)")]
        public string DeviceId { get; set; }

        /// <summary>
        /// <para type="description">List of owner user's email addresses (Read-only)</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of owner user's email addresses (Read-only)")]
        public System.Collections.Generic.IList<string> Email { get; set; }

        /// <summary>
        /// <para type="description">Date and time the device was first synchronized with the policy settings in the Google Apps administrator control panel (Read-only)</para>
        /// </summary>
        [Parameter(Position = 9,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Date and time the device was first synchronized with the policy settings in the Google Apps administrator control panel (Read-only)")]
        public System.Nullable<System.DateTime> FirstSync { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device Hardware Id (Read-only)</para>
        /// </summary>
        [Parameter(Position = 10,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device Hardware Id (Read-only)")]
        public string HardwareId { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device IMEI number (Read-only)</para>
        /// </summary>
        [Parameter(Position = 11,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device IMEI number (Read-only)")]
        public string Imei { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device Kernel version (Read-only)</para>
        /// </summary>
        [Parameter(Position = 12,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device Kernel version (Read-only)")]
        public string KernelVersion { get; set; }

        /// <summary>
        /// <para type="description">Date and time the device was last synchronized with the policy settings in the Google Apps administrator control panel (Read-only)</para>
        /// </summary>
        [Parameter(Position = 13,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Date and time the device was last synchronized with the policy settings in the Google Apps administrator control panel (Read-only)")]
        public System.Nullable<System.DateTime> LastSync { get; set; }

        /// <summary>
        /// <para type="description">Boolean indicating if this account is on owner/primary profile or not (Read-only)</para>
        /// </summary>
        [Parameter(Position = 14,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Boolean indicating if this account is on owner/primary profile or not (Read-only)")]
        public System.Nullable<bool> ManagedAccountIsOnOwnerProfile { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device MEID number (Read-only)</para>
        /// </summary>
        [Parameter(Position = 15,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device MEID number (Read-only)")]
        public string Meid { get; set; }

        /// <summary>
        /// <para type="description">Name of the model of the device</para>
        /// </summary>
        [Parameter(Position = 16,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the model of the device")]
        public string Model { get; set; }

        /// <summary>
        /// <para type="description">List of owner user's names (Read-only)</para>
        /// </summary>
        [Parameter(Position = 17,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of owner user's names (Read-only)")]
        public System.Collections.Generic.IList<string> Name { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device mobile or network operator (if available) (Read-only)</para>
        /// </summary>
        [Parameter(Position = 18,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device mobile or network operator (if available) (Read-only)")]
        public string NetworkOperator { get; set; }

        /// <summary>
        /// <para type="description">Name of the mobile operating system</para>
        /// </summary>
        [Parameter(Position = 19,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the mobile operating system")]
        public string Os { get; set; }

        /// <summary>
        /// <para type="description">List of accounts added on device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 20,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of accounts added on device (Read-only)")]
        public System.Collections.Generic.IList<string> OtherAccountsInfo { get; set; }

        /// <summary>
        /// <para type="description">Unique identifier of Mobile Device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 21,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unique identifier of Mobile Device (Read-only)")]
        public string ResourceId { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device SSN or Serial Number (Read-only)</para>
        /// </summary>
        [Parameter(Position = 22,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device SSN or Serial Number (Read-only)")]
        public string SerialNumber { get; set; }

        /// <summary>
        /// <para type="description">Status of the device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 23,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Status of the device (Read-only)")]
        public string Status { get; set; }

        /// <summary>
        /// <para type="description">Work profile supported on device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 24,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Work profile supported on device (Read-only)")]
        public System.Nullable<bool> SupportsWorkProfile { get; set; }

        /// <summary>
        /// <para type="description">The type of device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 25,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The type of device (Read-only)")]
        public string Type { get; set; }

        /// <summary>
        /// <para type="description">Unknown sources enabled or disabled on device (Read-only)</para>
        /// </summary>
        [Parameter(Position = 26,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Unknown sources enabled or disabled on device (Read-only)")]
        public System.Nullable<bool> UnknownSourcesStatus { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device user agent</para>
        /// </summary>
        [Parameter(Position = 27,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device user agent")]
        public string UserAgent { get; set; }

        /// <summary>
        /// <para type="description">Mobile Device WiFi MAC address (Read-only)</para>
        /// </summary>
        [Parameter(Position = 28,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Mobile Device WiFi MAC address (Read-only)")]
        public string WifiMacAddress { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.MobileDevice()
            {
                AdbStatus = this.AdbStatus,
                Applications = this.Applications,
                BasebandVersion = this.BasebandVersion,
                BuildNumber = this.BuildNumber,
                DefaultLanguage = this.DefaultLanguage,
                DeveloperOptionsStatus = this.DeveloperOptionsStatus,
                DeviceCompromisedStatus = this.DeviceCompromisedStatus,
                DeviceId = this.DeviceId,
                Email = this.Email,
                FirstSync = this.FirstSync,
                HardwareId = this.HardwareId,
                Imei = this.Imei,
                KernelVersion = this.KernelVersion,
                LastSync = this.LastSync,
                ManagedAccountIsOnOwnerProfile = this.ManagedAccountIsOnOwnerProfile,
                Meid = this.Meid,
                Model = this.Model,
                Name = this.Name,
                NetworkOperator = this.NetworkOperator,
                Os = this.Os,
                OtherAccountsInfo = this.OtherAccountsInfo,
                ResourceId = this.ResourceId,
                SerialNumber = this.SerialNumber,
                Status = this.Status,
                SupportsWorkProfile = this.SupportsWorkProfile,
                Type = this.Type,
                UnknownSourcesStatus = this.UnknownSourcesStatus,
                UserAgent = this.UserAgent,
                WifiMacAddress = this.WifiMacAddress,
            };

            if (ShouldProcess("MobileDevice"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API OrgUnit object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a OrgUnit object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.OrgUnit</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryOrgUnitObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryOrgUnitObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryOrgUnitObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.OrgUnit))]
    public class NewGDirectoryOrgUnitObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Should block inheritance</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Should block inheritance")]
        public System.Nullable<bool> BlockInheritance { get; set; }

        /// <summary>
        /// <para type="description">Description of OrgUnit</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Description of OrgUnit")]
        public string Description { get; set; }

        /// <summary>
        /// <para type="description">Name of OrgUnit</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of OrgUnit")]
        public string Name { get; set; }

        /// <summary>
        /// <para type="description">Id of OrgUnit</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Id of OrgUnit")]
        public string OrgUnitId { get; set; }

        /// <summary>
        /// <para type="description">Path of OrgUnit</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Path of OrgUnit")]
        public string OrgUnitPath { get; set; }

        /// <summary>
        /// <para type="description">Id of parent OrgUnit</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Id of parent OrgUnit")]
        public string ParentOrgUnitId { get; set; }

        /// <summary>
        /// <para type="description">Path of parent OrgUnit</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Path of parent OrgUnit")]
        public string ParentOrgUnitPath { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.OrgUnit()
            {
                BlockInheritance = this.BlockInheritance,
                Description = this.Description,
                Name = this.Name,
                OrgUnitId = this.OrgUnitId,
                OrgUnitPath = this.OrgUnitPath,
                ParentOrgUnitId = this.ParentOrgUnitId,
                ParentOrgUnitPath = this.ParentOrgUnitPath,
            };

            if (ShouldProcess("OrgUnit"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserPhone object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserPhone object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserPhone</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserPhoneObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserPhoneObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserPhoneObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserPhone))]
    public class NewGDirectoryUserPhoneObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Custom Type.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom Type.")]
        public string CustomType { get; set; }

        /// <summary>
        /// <para type="description">If this is user's primary phone or not.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If this is user's primary phone or not.")]
        public System.Nullable<bool> Primary { get; set; }

        /// <summary>
        /// <para type="description">Each entry can have a type which indicates standard types of that entry. For example phone could be of home_fax, work, mobile etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Each entry can have a type which indicates standard types of that entry. For example phone could be of home_fax, work, mobile etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.")]
        public string Type { get; set; }

        /// <summary>
        /// <para type="description">Phone number.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Phone number.")]
        public string Value { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserPhone()
            {
                CustomType = this.CustomType,
                Primary = this.Primary,
                Type = this.Type,
                Value = this.Value,
            };

            if (ShouldProcess("UserPhone"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API UserRelation object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserRelation object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.UserRelation</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryUserRelationObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryUserRelationObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryUserRelationObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.UserRelation))]
    public class NewGDirectoryUserRelationObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Custom Type.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Custom Type.")]
        public string CustomType { get; set; }

        /// <summary>
        /// <para type="description">The relation of the user. Some of the possible values are mother, father, sister, brother, manager, assistant, partner.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The relation of the user. Some of the possible values are mother, father, sister, brother, manager, assistant, partner.")]
        public string Type { get; set; }

        /// <summary>
        /// <para type="description">The name of the relation.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The name of the relation.")]
        public string Value { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.UserRelation()
            {
                CustomType = this.CustomType,
                Type = this.Type,
                Value = this.Value,
            };

            if (ShouldProcess("UserRelation"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API VerificationCode object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a VerificationCode object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.VerificationCode</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryVerificationCodeObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryVerificationCodeObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryVerificationCodeObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.VerificationCode))]
    public class NewGDirectoryVerificationCodeObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The obfuscated unique ID of the user.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The obfuscated unique ID of the user.")]
        public string UserId { get; set; }

        /// <summary>
        /// <para type="description">A current verification code for the user. Invalidated or used verification codes are not returned as part of the result.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "A current verification code for the user. Invalidated or used verification codes are not returned as part of the result.")]
        public string VerificationCodeValue { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.VerificationCode()
            {
                UserId = this.UserId,
                VerificationCodeValue = this.VerificationCodeValue,
            };

            if (ShouldProcess("VerificationCode"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API SchemaFieldSpec.NumericIndexingSpecData object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a SchemaFieldSpec.NumericIndexingSpecData object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.SchemaFieldSpec.NumericIndexingSpecData</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectorySchemaFieldSpecNumericIndexingSpecDataObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectorySchemaFieldSpec.NumericIndexingSpecDataObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectorySchemaFieldSpecNumericIndexingSpecDataObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.SchemaFieldSpec.NumericIndexingSpecData))]
    public class NewGDirectorySchemaFieldSpecNumericIndexingSpecDataObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.")]
        public System.Nullable<double> MaxValue { get; set; }

        /// <summary>
        /// <para type="description">Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.")]
        public System.Nullable<double> MinValue { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.SchemaFieldSpec.NumericIndexingSpecData()
            {
                MaxValue = this.MaxValue,
                MinValue = this.MinValue,
            };

            if (ShouldProcess("SchemaFieldSpec.NumericIndexingSpecData"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Directory API Aliases object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Aliases object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.Aliases</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GDirectoryAliasesObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDirectoryAliasesObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDirectoryAliasesObj",
    SupportsShouldProcess = true)]
    [OutputType(typeof(Google.Apis.admin.Directory.directory_v1.Data.Aliases))]
    public class NewGDirectoryAliasesObj : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">List of alias objects.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "List of alias objects.")]
        public System.Collections.Generic.IList<object> AliasesValue { get; set; }
        #endregion

         protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.Directory.directory_v1.Data.Aliases()
            {
                AliasesValue = this.AliasesValue,
            };

            if (ShouldProcess("Aliases"))
            {
                WriteObject(body);
            }
        }
    }
}



namespace gShell.Cmdlets.Directory.Asps
{


    /// <summary>
    /// <para type="synopsis">Delete an ASP issued by a user.</para>
    /// <para type="description">Delete an ASP issued by a user.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryAsps -UserKey $SomeUserKeyString -CodeId $SomeCodeIdSystemNullable<int></code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryAsps">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryAsps",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryAsps")]
    public class DeleteGDirectoryAspsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the ASP to be deleted.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the ASP to be deleted.")]
        public int CodeId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Asps", "Delete-GDirectoryAsps"))
            {

                asps.Delete(UserKey, CodeId);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Get information about an ASP issued by a user.</para>
    /// <para type="description">Get information about an ASP issued by a user.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryAsps -UserKey $SomeUserKeyString -CodeId $SomeCodeIdSystemNullable<int></code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryAsps">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryAsps",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryAsps")]
    public class GetGDirectoryAspsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the ASP.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the ASP.")]
        public int CodeId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Asps", "Get-GDirectoryAsps"))
            {

                 WriteObject(asps.Get(UserKey, CodeId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">List the ASPs issued by a user.</para>
    /// <para type="description">List the ASPs issued by a user.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryAsps -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryAsps">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryAsps",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryAsps")]
    public class ListGDirectoryAspsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Asps", "List-GDirectoryAsps"))
            {

                 WriteObject(asps.List(UserKey));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Channels
{


    /// <summary>
    /// <para type="synopsis">Stop watching resources through this channel</para>
    /// <para type="description">Stop watching resources through this channel</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Stop-GDirectoryChannels -ChannelBody $SomeChannelObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Stop-GDirectoryChannels">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsLifecycle.Stop, "GDirectoryChannels",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Stop-GDirectoryChannels")]
    public class StopGDirectoryChannelsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">An notification channel used to watch for resource changes.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "An notification channel used to watch for resource changes.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Channel ChannelBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Channels", "Stop-GDirectoryChannels"))
            {

                channels.Stop(ChannelBody);
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Chromeosdevices
{


    /// <summary>
    /// <para type="synopsis">Retrieve Chrome OS Device</para>
    /// <para type="description">Retrieve Chrome OS Device</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryChromeosdevices -CustomerId $SomeCustomerIdString -DeviceId $SomeDeviceIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryChromeosdevices">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryChromeosdevices",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryChromeosdevices")]
    public class GetGDirectoryChromeosdevicesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Immutable id of Chrome OS Device</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of Chrome OS Device")]
        public string DeviceId { get; set; }

        /// <summary>
        /// <para type="description">Restrict information returned to a set of selected fields.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Restrict information returned to a set of selected fields.")]
        public ChromeosdevicesResource.GetRequest.ProjectionEnum? Projection { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Chromeosdevices", "Get-GDirectoryChromeosdevices"))
            {

                var properties = new gDirectory.Chromeosdevices.ChromeosdevicesGetProperties()
                {
                    Projection = this.Projection
                };


                 WriteObject(chromeosdevices.Get(CustomerId, DeviceId, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve all Chrome OS Devices of a customer (paginated)</para>
    /// <para type="description">Retrieve all Chrome OS Devices of a customer (paginated)</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryChromeosdevices -CustomerId $SomeCustomerIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryChromeosdevices">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryChromeosdevices",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryChromeosdevices")]
    public class ListGDirectoryChromeosdevicesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return. Default is 100</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return. Default is 100")]
        public System.Nullable<int> MaxResults { get; set; }

        /// <summary>
        /// <para type="description">Column to use for sorting results</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Column to use for sorting results")]
        public ChromeosdevicesResource.ListRequest.OrderByEnum? OrderBy { get; set; }

        /// <summary>
        /// <para type="description">Restrict information returned to a set of selected fields.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Restrict information returned to a set of selected fields.")]
        public ChromeosdevicesResource.ListRequest.ProjectionEnum? Projection { get; set; }

        /// <summary>
        /// <para type="description">Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?hl=en=1698333</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?hl=en=1698333")]
        public string Query { get; set; }

        /// <summary>
        /// <para type="description">Whether to return results in ascending or descending order. Only of use when orderBy is also used</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether to return results in ascending or descending order. Only of use when orderBy is also used")]
        public ChromeosdevicesResource.ListRequest.SortOrderEnum? SortOrder { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Chromeosdevices", "List-GDirectoryChromeosdevices"))
            {

                var properties = new gDirectory.Chromeosdevices.ChromeosdevicesListProperties()
                {
                    OrderBy = this.OrderBy,
                    Projection = this.Projection,
                    Query = this.Query,
                    SortOrder = this.SortOrder
                };


                 WriteObject(chromeosdevices.List(CustomerId, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update Chrome OS Device. This method supports patch semantics.</para>
    /// <para type="description">Update Chrome OS Device. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryChromeosdevices -CustomerId $SomeCustomerIdString -DeviceId $SomeDeviceIdString -ChromeOsDeviceBody $SomeChromeOsDeviceObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryChromeosdevices">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryChromeosdevices",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryChromeosdevices")]
    public class PatchGDirectoryChromeosdevicesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Immutable id of Chrome OS Device</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of Chrome OS Device")]
        public string DeviceId { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Chrome Os Device resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Chrome Os Device resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice ChromeOsDeviceBody { get; set; }

        /// <summary>
        /// <para type="description">Restrict information returned to a set of selected fields.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Restrict information returned to a set of selected fields.")]
        public ChromeosdevicesResource.PatchRequest.ProjectionEnum? Projection { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Chromeosdevices", "Patch-GDirectoryChromeosdevices"))
            {

                var properties = new gDirectory.Chromeosdevices.ChromeosdevicesPatchProperties()
                {
                    Projection = this.Projection
                };


                 WriteObject(chromeosdevices.Patch(ChromeOsDeviceBody, CustomerId, DeviceId, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update Chrome OS Device</para>
    /// <para type="description">Update Chrome OS Device</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryChromeosdevices -CustomerId $SomeCustomerIdString -DeviceId $SomeDeviceIdString -ChromeOsDeviceBody $SomeChromeOsDeviceObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryChromeosdevices">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryChromeosdevices",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryChromeosdevices")]
    public class UpdateGDirectoryChromeosdevicesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Immutable id of Chrome OS Device</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of Chrome OS Device")]
        public string DeviceId { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Chrome Os Device resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Chrome Os Device resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice ChromeOsDeviceBody { get; set; }

        /// <summary>
        /// <para type="description">Restrict information returned to a set of selected fields.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Restrict information returned to a set of selected fields.")]
        public ChromeosdevicesResource.UpdateRequest.ProjectionEnum? Projection { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Chromeosdevices", "Update-GDirectoryChromeosdevices"))
            {

                var properties = new gDirectory.Chromeosdevices.ChromeosdevicesUpdateProperties()
                {
                    Projection = this.Projection
                };


                 WriteObject(chromeosdevices.Update(ChromeOsDeviceBody, CustomerId, DeviceId, properties));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Customers
{


    /// <summary>
    /// <para type="synopsis">Retrives a customer.</para>
    /// <para type="description">Retrives a customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryCustomers -CustomerKey $SomeCustomerKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryCustomers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryCustomers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryCustomers")]
    public class GetGDirectoryCustomersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Id of the customer to be retrieved</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Id of the customer to be retrieved")]
        public string CustomerKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Customers", "Get-GDirectoryCustomers"))
            {

                 WriteObject(customers.Get(CustomerKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Updates a customer. This method supports patch semantics.</para>
    /// <para type="description">Updates a customer. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryCustomers -CustomerKey $SomeCustomerKeyString -CustomerBody $SomeCustomerObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryCustomers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryCustomers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryCustomers")]
    public class PatchGDirectoryCustomersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Id of the customer to be updated</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Id of the customer to be updated")]
        public string CustomerKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Customer Resource object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Customer Resource object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Customer CustomerBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Customers", "Patch-GDirectoryCustomers"))
            {

                 WriteObject(customers.Patch(CustomerBody, CustomerKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Updates a customer.</para>
    /// <para type="description">Updates a customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryCustomers -CustomerKey $SomeCustomerKeyString -CustomerBody $SomeCustomerObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryCustomers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryCustomers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryCustomers")]
    public class UpdateGDirectoryCustomersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Id of the customer to be updated</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Id of the customer to be updated")]
        public string CustomerKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Customer Resource object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Customer Resource object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Customer CustomerBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Customers", "Update-GDirectoryCustomers"))
            {

                 WriteObject(customers.Update(CustomerBody, CustomerKey));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.DomainAliases
{


    /// <summary>
    /// <para type="synopsis">Deletes a Domain Alias of the customer.</para>
    /// <para type="description">Deletes a Domain Alias of the customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryDomainAliases -Customer $SomeCustomerString -DomainAliasName $SomeDomainAliasNameString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryDomainAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryDomainAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryDomainAliases")]
    public class DeleteGDirectoryDomainAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Name of domain alias to be retrieved.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of domain alias to be retrieved.")]
        public string DomainAliasName { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory DomainAliases", "Delete-GDirectoryDomainAliases"))
            {

                domainAliases.Delete(Customer, DomainAliasName);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieves a domain alias of the customer.</para>
    /// <para type="description">Retrieves a domain alias of the customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryDomainAliases -Customer $SomeCustomerString -DomainAliasName $SomeDomainAliasNameString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryDomainAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryDomainAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryDomainAliases")]
    public class GetGDirectoryDomainAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Name of domain alias to be retrieved.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of domain alias to be retrieved.")]
        public string DomainAliasName { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory DomainAliases", "Get-GDirectoryDomainAliases"))
            {

                 WriteObject(domainAliases.Get(Customer, DomainAliasName));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Inserts a Domain alias of the customer.</para>
    /// <para type="description">Inserts a Domain alias of the customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryDomainAliases -Customer $SomeCustomerString -DomainAliasBody $SomeDomainAliasObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryDomainAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryDomainAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryDomainAliases")]
    public class InsertGDirectoryDomainAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Domain Alias object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Domain Alias object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.DomainAlias DomainAliasBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory DomainAliases", "Insert-GDirectoryDomainAliases"))
            {

                 WriteObject(domainAliases.Insert(DomainAliasBody, Customer));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Lists the domain aliases of the customer.</para>
    /// <para type="description">Lists the domain aliases of the customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryDomainAliases -Customer $SomeCustomerString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryDomainAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryDomainAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryDomainAliases")]
    public class ListGDirectoryDomainAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Name of the parent domain for which domain aliases are to be fetched.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the parent domain for which domain aliases are to be fetched.")]
        public string ParentDomainName { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory DomainAliases", "List-GDirectoryDomainAliases"))
            {

                var properties = new gDirectory.DomainAliases.DomainAliasesListProperties()
                {
                    ParentDomainName = this.ParentDomainName
                };


                 WriteObject(domainAliases.List(Customer, properties));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Domains
{


    /// <summary>
    /// <para type="synopsis">Deletes a domain of the customer.</para>
    /// <para type="description">Deletes a domain of the customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryDomains -Customer $SomeCustomerString -DomainName $SomeDomainNameString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryDomains">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryDomains",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryDomains")]
    public class DeleteGDirectoryDomainsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Name of domain to be deleted</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of domain to be deleted")]
        public string DomainName { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Domains", "Delete-GDirectoryDomains"))
            {

                domains.Delete(Customer, DomainName);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrives a domain of the customer.</para>
    /// <para type="description">Retrives a domain of the customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryDomains -Customer $SomeCustomerString -DomainName $SomeDomainNameString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryDomains">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryDomains",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryDomains")]
    public class GetGDirectoryDomainsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Name of domain to be retrieved</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of domain to be retrieved")]
        public string DomainName { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Domains", "Get-GDirectoryDomains"))
            {

                 WriteObject(domains.Get(Customer, DomainName));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Inserts a domain of the customer.</para>
    /// <para type="description">Inserts a domain of the customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryDomains -Customer $SomeCustomerString -DomainsBody $SomeDomainsObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryDomains">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryDomains",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryDomains")]
    public class InsertGDirectoryDomainsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Domain object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Domain object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Domains DomainsBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Domains", "Insert-GDirectoryDomains"))
            {

                 WriteObject(domains.Insert(DomainsBody, Customer));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Lists the domains of the customer.</para>
    /// <para type="description">Lists the domains of the customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryDomains -Customer $SomeCustomerString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryDomains">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryDomains",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryDomains")]
    public class ListGDirectoryDomainsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Domains", "List-GDirectoryDomains"))
            {

                 WriteObject(domains.List(Customer));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Groups
{


    /// <summary>
    /// <para type="synopsis">Delete Group</para>
    /// <para type="description">Delete Group</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryGroups -GroupKey $SomeGroupKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryGroups">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryGroups",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryGroups")]
    public class DeleteGDirectoryGroupsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Groups", "Delete-GDirectoryGroups"))
            {

                groups.Delete(GroupKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve Group</para>
    /// <para type="description">Retrieve Group</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryGroups -GroupKey $SomeGroupKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryGroups">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryGroups",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryGroups")]
    public class GetGDirectoryGroupsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Groups", "Get-GDirectoryGroups"))
            {

                 WriteObject(groups.Get(GroupKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Create Group</para>
    /// <para type="description">Create Group</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryGroups -GroupBody $SomeGroupObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryGroups">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryGroups",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryGroups")]
    public class InsertGDirectoryGroupsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">JSON template for Group resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Group resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Group GroupBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Groups", "Insert-GDirectoryGroups"))
            {

                 WriteObject(groups.Insert(GroupBody));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve all groups in a domain (paginated)</para>
    /// <para type="description">Retrieve all groups in a domain (paginated)</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryGroups</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryGroups">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryGroups",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryGroups")]
    public class ListGDirectoryGroupsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account. In case of multi-domain, to fetch all groups for a customer, fill this field instead of domain.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account. In case of multi-domain, to fetch all groups for a customer, fill this field instead of domain.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Name of the domain. Fill this field to get groups from only this domain. To return all groups in a multi-domain fill customer field instead.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the domain. Fill this field to get groups from only this domain. To return all groups in a multi-domain fill customer field instead.")]
        public string Domain { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return. Default is 200</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return. Default is 200")]
        public System.Nullable<int> MaxResults { get; set; }

        /// <summary>
        /// <para type="description">Email or immutable Id of the user if only those groups are to be listed, the given user is a member of. If Id, it should match with id of user object</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user if only those groups are to be listed, the given user is a member of. If Id, it should match with id of user object")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Groups", "List-GDirectoryGroups"))
            {

                var properties = new gDirectory.Groups.GroupsListProperties()
                {
                    Customer = this.Customer,
                    Domain = this.Domain,
                    UserKey = this.UserKey
                };


                 WriteObject(groups.List(properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update Group. This method supports patch semantics.</para>
    /// <para type="description">Update Group. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryGroups -GroupKey $SomeGroupKeyString -GroupBody $SomeGroupObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryGroups">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryGroups",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryGroups")]
    public class PatchGDirectoryGroupsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group. If Id, it should match with id of group object</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group. If Id, it should match with id of group object")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Group resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Group resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Group GroupBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Groups", "Patch-GDirectoryGroups"))
            {

                 WriteObject(groups.Patch(GroupBody, GroupKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update Group</para>
    /// <para type="description">Update Group</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryGroups -GroupKey $SomeGroupKeyString -GroupBody $SomeGroupObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryGroups">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryGroups",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryGroups")]
    public class UpdateGDirectoryGroupsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group. If Id, it should match with id of group object</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group. If Id, it should match with id of group object")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Group resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Group resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Group GroupBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Groups", "Update-GDirectoryGroups"))
            {

                 WriteObject(groups.Update(GroupBody, GroupKey));
            }

        }
    }

}


namespace gShell.Cmdlets.Directory.Groups.Aliases
{


    /// <summary>
    /// <para type="synopsis">Remove a alias for the group</para>
    /// <para type="description">Remove a alias for the group</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryAliases -GroupKey $SomeGroupKeyString -Alias $SomeAliasString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryAliases")]
    public class DeleteGDirectoryAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">The alias to be removed</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The alias to be removed")]
        public string Alias { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Aliases", "Delete-GDirectoryAliases"))
            {

                groups.aliases.Delete(GroupKey, Alias);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Add a alias for the group</para>
    /// <para type="description">Add a alias for the group</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryAliases -GroupKey $SomeGroupKeyString -AliasBody $SomeAliasObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryAliases")]
    public class InsertGDirectoryAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Alias object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Alias object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Alias AliasBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Aliases", "Insert-GDirectoryAliases"))
            {

                 WriteObject(groups.aliases.Insert(AliasBody, GroupKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">List all aliases for a group</para>
    /// <para type="description">List all aliases for a group</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryAliases -GroupKey $SomeGroupKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryAliases")]
    public class ListGDirectoryAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Aliases", "List-GDirectoryAliases"))
            {

                 WriteObject(groups.aliases.List(GroupKey));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Members
{


    /// <summary>
    /// <para type="synopsis">Remove membership.</para>
    /// <para type="description">Remove membership.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberKey $SomeMemberKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryMembers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryMembers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryMembers")]
    public class DeleteGDirectoryMembersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">Email or immutable Id of the member</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the member")]
        public string MemberKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Members", "Delete-GDirectoryMembers"))
            {

                members.Delete(GroupKey, MemberKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve Group Member</para>
    /// <para type="description">Retrieve Group Member</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberKey $SomeMemberKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryMembers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryMembers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryMembers")]
    public class GetGDirectoryMembersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">Email or immutable Id of the member</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the member")]
        public string MemberKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Members", "Get-GDirectoryMembers"))
            {

                 WriteObject(members.Get(GroupKey, MemberKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Add user to the specified group.</para>
    /// <para type="description">Add user to the specified group.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberBody $SomeMemberObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryMembers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryMembers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryMembers")]
    public class InsertGDirectoryMembersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Member resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Member resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Member MemberBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Members", "Insert-GDirectoryMembers"))
            {

                 WriteObject(members.Insert(MemberBody, GroupKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve all members in a group (paginated)</para>
    /// <para type="description">Retrieve all members in a group (paginated)</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryMembers -GroupKey $SomeGroupKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryMembers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryMembers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryMembers")]
    public class ListGDirectoryMembersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return. Default is 200</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return. Default is 200")]
        public System.Nullable<int> MaxResults { get; set; }

        /// <summary>
        /// <para type="description">Comma separated role values to filter list results on.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Comma separated role values to filter list results on.")]
        public string Roles { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Members", "List-GDirectoryMembers"))
            {

                var properties = new gDirectory.Members.MembersListProperties()
                {
                    Roles = this.Roles
                };


                 WriteObject(members.List(GroupKey, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update membership of a user in the specified group. This method supports patch semantics.</para>
    /// <para type="description">Update membership of a user in the specified group. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberKey $SomeMemberKeyString -MemberBody $SomeMemberObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryMembers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryMembers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryMembers")]
    public class PatchGDirectoryMembersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group. If Id, it should match with id of group object</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group. If Id, it should match with id of group object")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">Email or immutable Id of the user. If Id, it should match with id of member object</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user. If Id, it should match with id of member object")]
        public string MemberKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Member resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Member resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Member MemberBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Members", "Patch-GDirectoryMembers"))
            {

                 WriteObject(members.Patch(MemberBody, GroupKey, MemberKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update membership of a user in the specified group.</para>
    /// <para type="description">Update membership of a user in the specified group.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberKey $SomeMemberKeyString -MemberBody $SomeMemberObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryMembers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryMembers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryMembers")]
    public class UpdateGDirectoryMembersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the group. If Id, it should match with id of group object</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the group. If Id, it should match with id of group object")]
        public string GroupKey { get; set; }

        /// <summary>
        /// <para type="description">Email or immutable Id of the user. If Id, it should match with id of member object</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user. If Id, it should match with id of member object")]
        public string MemberKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Member resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Member resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Member MemberBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Members", "Update-GDirectoryMembers"))
            {

                 WriteObject(members.Update(MemberBody, GroupKey, MemberKey));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Mobiledevices
{


    /// <summary>
    /// <para type="synopsis">Take action on Mobile Device</para>
    /// <para type="description">Take action on Mobile Device</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Action-GDirectoryMobiledevices -CustomerId $SomeCustomerIdString -ResourceId $SomeResourceIdString -MobileDeviceActionBody $SomeMobileDeviceActionObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Action-GDirectoryMobiledevices">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Action", "GDirectoryMobiledevices",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Action-GDirectoryMobiledevices")]
    public class ActionGDirectoryMobiledevicesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Immutable id of Mobile Device</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of Mobile Device")]
        public string ResourceId { get; set; }

        /// <summary>
        /// <para type="description">JSON request template for firing commands on Mobile Device in Directory Devices API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON request template for firing commands on Mobile Device in Directory Devices API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.MobileDeviceAction MobileDeviceActionBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Mobiledevices", "Action-GDirectoryMobiledevices"))
            {

                mobiledevices.Action(MobileDeviceActionBody, CustomerId, ResourceId);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Delete Mobile Device</para>
    /// <para type="description">Delete Mobile Device</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryMobiledevices -CustomerId $SomeCustomerIdString -ResourceId $SomeResourceIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryMobiledevices">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryMobiledevices",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryMobiledevices")]
    public class DeleteGDirectoryMobiledevicesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Immutable id of Mobile Device</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of Mobile Device")]
        public string ResourceId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Mobiledevices", "Delete-GDirectoryMobiledevices"))
            {

                mobiledevices.Delete(CustomerId, ResourceId);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve Mobile Device</para>
    /// <para type="description">Retrieve Mobile Device</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryMobiledevices -CustomerId $SomeCustomerIdString -ResourceId $SomeResourceIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryMobiledevices">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryMobiledevices",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryMobiledevices")]
    public class GetGDirectoryMobiledevicesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Immutable id of Mobile Device</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of Mobile Device")]
        public string ResourceId { get; set; }

        /// <summary>
        /// <para type="description">Restrict information returned to a set of selected fields.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Restrict information returned to a set of selected fields.")]
        public MobiledevicesResource.GetRequest.ProjectionEnum? Projection { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Mobiledevices", "Get-GDirectoryMobiledevices"))
            {

                var properties = new gDirectory.Mobiledevices.MobiledevicesGetProperties()
                {
                    Projection = this.Projection
                };


                 WriteObject(mobiledevices.Get(CustomerId, ResourceId, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve all Mobile Devices of a customer (paginated)</para>
    /// <para type="description">Retrieve all Mobile Devices of a customer (paginated)</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryMobiledevices -CustomerId $SomeCustomerIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryMobiledevices">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryMobiledevices",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryMobiledevices")]
    public class ListGDirectoryMobiledevicesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return. Default is 100</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return. Default is 100")]
        public System.Nullable<int> MaxResults { get; set; }

        /// <summary>
        /// <para type="description">Column to use for sorting results</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Column to use for sorting results")]
        public MobiledevicesResource.ListRequest.OrderByEnum? OrderBy { get; set; }

        /// <summary>
        /// <para type="description">Restrict information returned to a set of selected fields.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Restrict information returned to a set of selected fields.")]
        public MobiledevicesResource.ListRequest.ProjectionEnum? Projection { get; set; }

        /// <summary>
        /// <para type="description">Search string in the format given at http://support.google.com/a/bin/answer.py?hl=en=1408863#search</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Search string in the format given at http://support.google.com/a/bin/answer.py?hl=en=1408863#search")]
        public string Query { get; set; }

        /// <summary>
        /// <para type="description">Whether to return results in ascending or descending order. Only of use when orderBy is also used</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether to return results in ascending or descending order. Only of use when orderBy is also used")]
        public MobiledevicesResource.ListRequest.SortOrderEnum? SortOrder { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Mobiledevices", "List-GDirectoryMobiledevices"))
            {

                var properties = new gDirectory.Mobiledevices.MobiledevicesListProperties()
                {
                    OrderBy = this.OrderBy,
                    Projection = this.Projection,
                    Query = this.Query,
                    SortOrder = this.SortOrder
                };


                 WriteObject(mobiledevices.List(CustomerId, properties));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Notifications
{


    /// <summary>
    /// <para type="synopsis">Deletes a notification</para>
    /// <para type="description">Deletes a notification</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryNotifications -Customer $SomeCustomerString -NotificationId $SomeNotificationIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryNotifications">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryNotifications",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryNotifications")]
    public class DeleteGDirectoryNotificationsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. The customerId is also returned as part of the Users resource.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. The customerId is also returned as part of the Users resource.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the notification.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the notification.")]
        public string NotificationId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Notifications", "Delete-GDirectoryNotifications"))
            {

                notifications.Delete(Customer, NotificationId);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieves a notification.</para>
    /// <para type="description">Retrieves a notification.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryNotifications -Customer $SomeCustomerString -NotificationId $SomeNotificationIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryNotifications">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryNotifications",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryNotifications")]
    public class GetGDirectoryNotificationsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. The customerId is also returned as part of the Users resource.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. The customerId is also returned as part of the Users resource.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the notification.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the notification.")]
        public string NotificationId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Notifications", "Get-GDirectoryNotifications"))
            {

                 WriteObject(notifications.Get(Customer, NotificationId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieves a list of notifications.</para>
    /// <para type="description">Retrieves a list of notifications.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryNotifications -Customer $SomeCustomerString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryNotifications">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryNotifications",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryNotifications")]
    public class ListGDirectoryNotificationsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The ISO 639-1 code of the language notifications are returned in. The default is English (en).</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The ISO 639-1 code of the language notifications are returned in. The default is English (en).")]
        public string Language { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of notifications to return per page. The default is 100.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of notifications to return per page. The default is 100.")]
        public System.Nullable<long> MaxResults { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Notifications", "List-GDirectoryNotifications"))
            {

                var properties = new gDirectory.Notifications.NotificationsListProperties()
                {
                    Language = this.Language
                };


                 WriteObject(notifications.List(Customer, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Updates a notification. This method supports patch semantics.</para>
    /// <para type="description">Updates a notification. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryNotifications -Customer $SomeCustomerString -NotificationId $SomeNotificationIdString -NotificationBody $SomeNotificationObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryNotifications">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryNotifications",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryNotifications")]
    public class PatchGDirectoryNotificationsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the notification.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the notification.")]
        public string NotificationId { get; set; }

        /// <summary>
        /// <para type="description">Template for a notification resource.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Template for a notification resource.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Notification NotificationBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Notifications", "Patch-GDirectoryNotifications"))
            {

                 WriteObject(notifications.Patch(NotificationBody, Customer, NotificationId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Updates a notification.</para>
    /// <para type="description">Updates a notification.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryNotifications -Customer $SomeCustomerString -NotificationId $SomeNotificationIdString -NotificationBody $SomeNotificationObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryNotifications">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryNotifications",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryNotifications")]
    public class UpdateGDirectoryNotificationsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the notification.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the notification.")]
        public string NotificationId { get; set; }

        /// <summary>
        /// <para type="description">Template for a notification resource.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Template for a notification resource.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Notification NotificationBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Notifications", "Update-GDirectoryNotifications"))
            {

                 WriteObject(notifications.Update(NotificationBody, Customer, NotificationId));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Orgunits
{


    /// <summary>
    /// <para type="synopsis">Remove Organization Unit</para>
    /// <para type="description">Remove Organization Unit</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitPath @("some","strings")</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryOrgunits",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryOrgunits")]
    public class DeleteGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Full path of the organization unit or its Id</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Full path of the organization unit or its Id")]
        public string[] OrgUnitPath { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Orgunits", "Delete-GDirectoryOrgunits"))
            {

                orgunits.Delete(CustomerId, OrgUnitPath);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve Organization Unit</para>
    /// <para type="description">Retrieve Organization Unit</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitPath @("some","strings")</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryOrgunits",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryOrgunits")]
    public class GetGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Full path of the organization unit or its Id</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Full path of the organization unit or its Id")]
        public string[] OrgUnitPath { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Orgunits", "Get-GDirectoryOrgunits"))
            {

                 WriteObject(orgunits.Get(CustomerId, OrgUnitPath));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Add Organization Unit</para>
    /// <para type="description">Add Organization Unit</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitBody $SomeOrgUnitObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryOrgunits",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryOrgunits")]
    public class InsertGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Org Unit resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Org Unit resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.OrgUnit OrgUnitBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Orgunits", "Insert-GDirectoryOrgunits"))
            {

                 WriteObject(orgunits.Insert(OrgUnitBody, CustomerId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve all Organization Units</para>
    /// <para type="description">Retrieve all Organization Units</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryOrgunits -CustomerId $SomeCustomerIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryOrgunits",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryOrgunits")]
    public class ListGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">the URL-encoded organization unit's path or its Id</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "the URL-encoded organization unit's path or its Id")]
        public string OrgUnitPath { get; set; }

        /// <summary>
        /// <para type="description">Whether to return all sub-organizations or just immediate children</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether to return all sub-organizations or just immediate children")]
        public OrgunitsResource.ListRequest.TypeEnum? Type { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Orgunits", "List-GDirectoryOrgunits"))
            {

                var properties = new gDirectory.Orgunits.OrgunitsListProperties()
                {
                    OrgUnitPath = this.OrgUnitPath,
                    Type = this.Type
                };


                 WriteObject(orgunits.List(CustomerId, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update Organization Unit. This method supports patch semantics.</para>
    /// <para type="description">Update Organization Unit. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitPath @("some","strings") -OrgUnitBody $SomeOrgUnitObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryOrgunits",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryOrgunits")]
    public class PatchGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Full path of the organization unit or its Id</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Full path of the organization unit or its Id")]
        public string[] OrgUnitPath { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Org Unit resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Org Unit resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.OrgUnit OrgUnitBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Orgunits", "Patch-GDirectoryOrgunits"))
            {

                 WriteObject(orgunits.Patch(OrgUnitBody, CustomerId, OrgUnitPath));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update Organization Unit</para>
    /// <para type="description">Update Organization Unit</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitPath @("some","strings") -OrgUnitBody $SomeOrgUnitObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryOrgunits",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryOrgunits")]
    public class UpdateGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Full path of the organization unit or its Id</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Full path of the organization unit or its Id")]
        public string[] OrgUnitPath { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Org Unit resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Org Unit resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.OrgUnit OrgUnitBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Orgunits", "Update-GDirectoryOrgunits"))
            {

                 WriteObject(orgunits.Update(OrgUnitBody, CustomerId, OrgUnitPath));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Privileges
{


    /// <summary>
    /// <para type="synopsis">Retrieves a paginated list of all privileges for a customer.</para>
    /// <para type="description">Retrieves a paginated list of all privileges for a customer.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryPrivileges -Customer $SomeCustomerString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryPrivileges">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryPrivileges",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryPrivileges")]
    public class ListGDirectoryPrivilegesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Privileges", "List-GDirectoryPrivileges"))
            {

                 WriteObject(privileges.List(Customer));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Resources
{



}


namespace gShell.Cmdlets.Directory.Resources.Calendars
{


    /// <summary>
    /// <para type="synopsis">Deletes a calendar resource.</para>
    /// <para type="description">Deletes a calendar resource.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceId $SomeCalendarResourceIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryCalendars">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryCalendars",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryCalendars")]
    public class DeleteGDirectoryCalendarsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the calendar resource to delete.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the calendar resource to delete.")]
        public string CalendarResourceId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Calendars", "Delete-GDirectoryCalendars"))
            {

                resources.calendars.Delete(Customer, CalendarResourceId);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieves a calendar resource.</para>
    /// <para type="description">Retrieves a calendar resource.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceId $SomeCalendarResourceIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryCalendars">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryCalendars",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryCalendars")]
    public class GetGDirectoryCalendarsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the calendar resource to retrieve.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the calendar resource to retrieve.")]
        public string CalendarResourceId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Calendars", "Get-GDirectoryCalendars"))
            {

                 WriteObject(resources.calendars.Get(Customer, CalendarResourceId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Inserts a calendar resource.</para>
    /// <para type="description">Inserts a calendar resource.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceBody $SomeCalendarResourceObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryCalendars">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryCalendars",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryCalendars")]
    public class InsertGDirectoryCalendarsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Calendar Resource object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Calendar Resource object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.CalendarResource CalendarResourceBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Calendars", "Insert-GDirectoryCalendars"))
            {

                 WriteObject(resources.calendars.Insert(CalendarResourceBody, Customer));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieves a list of calendar resources for an account.</para>
    /// <para type="description">Retrieves a list of calendar resources for an account.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryCalendars -Customer $SomeCustomerString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryCalendars">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryCalendars",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryCalendars")]
    public class ListGDirectoryCalendarsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return.")]
        public System.Nullable<int> MaxResults { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Calendars", "List-GDirectoryCalendars"))
            {

                var properties = new gDirectory.Resources.Calendars.CalendarsListProperties()
                {
                };


                 WriteObject(resources.calendars.List(Customer, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Updates a calendar resource. This method supports patch semantics.</para>
    /// <para type="description">Updates a calendar resource. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceId $SomeCalendarResourceIdString -CalendarResourceBody $SomeCalendarResourceObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryCalendars">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryCalendars",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryCalendars")]
    public class PatchGDirectoryCalendarsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the calendar resource to update.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the calendar resource to update.")]
        public string CalendarResourceId { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Calendar Resource object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Calendar Resource object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.CalendarResource CalendarResourceBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Calendars", "Patch-GDirectoryCalendars"))
            {

                 WriteObject(resources.calendars.Patch(CalendarResourceBody, Customer, CalendarResourceId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Updates a calendar resource.</para>
    /// <para type="description">Updates a calendar resource.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceId $SomeCalendarResourceIdString -CalendarResourceBody $SomeCalendarResourceObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryCalendars">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryCalendars",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryCalendars")]
    public class UpdateGDirectoryCalendarsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">The unique ID of the calendar resource to update.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The unique ID of the calendar resource to update.")]
        public string CalendarResourceId { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Calendar Resource object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Calendar Resource object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.CalendarResource CalendarResourceBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Calendars", "Update-GDirectoryCalendars"))
            {

                 WriteObject(resources.calendars.Update(CalendarResourceBody, Customer, CalendarResourceId));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.RoleAssignments
{


    /// <summary>
    /// <para type="synopsis">Deletes a role assignment.</para>
    /// <para type="description">Deletes a role assignment.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryRoleAssignments -Customer $SomeCustomerString -RoleAssignmentId $SomeRoleAssignmentIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryRoleAssignments">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryRoleAssignments",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryRoleAssignments")]
    public class DeleteGDirectoryRoleAssignmentsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of the role assignment.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the role assignment.")]
        public string RoleAssignmentId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory RoleAssignments", "Delete-GDirectoryRoleAssignments"))
            {

                roleAssignments.Delete(Customer, RoleAssignmentId);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve a role assignment.</para>
    /// <para type="description">Retrieve a role assignment.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryRoleAssignments -Customer $SomeCustomerString -RoleAssignmentId $SomeRoleAssignmentIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryRoleAssignments">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryRoleAssignments",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryRoleAssignments")]
    public class GetGDirectoryRoleAssignmentsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of the role assignment.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the role assignment.")]
        public string RoleAssignmentId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory RoleAssignments", "Get-GDirectoryRoleAssignments"))
            {

                 WriteObject(roleAssignments.Get(Customer, RoleAssignmentId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Creates a role assignment.</para>
    /// <para type="description">Creates a role assignment.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryRoleAssignments -Customer $SomeCustomerString -RoleAssignmentBody $SomeRoleAssignmentObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryRoleAssignments">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryRoleAssignments",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryRoleAssignments")]
    public class InsertGDirectoryRoleAssignmentsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">JSON template for roleAssignment resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for roleAssignment resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.RoleAssignment RoleAssignmentBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory RoleAssignments", "Insert-GDirectoryRoleAssignments"))
            {

                 WriteObject(roleAssignments.Insert(RoleAssignmentBody, Customer));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieves a paginated list of all roleAssignments.</para>
    /// <para type="description">Retrieves a paginated list of all roleAssignments.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryRoleAssignments -Customer $SomeCustomerString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryRoleAssignments">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryRoleAssignments",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryRoleAssignments")]
    public class ListGDirectoryRoleAssignmentsCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return.")]
        public System.Nullable<int> MaxResults { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.")]
        public string RoleId { get; set; }

        /// <summary>
        /// <para type="description">The user's primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The user's primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory RoleAssignments", "List-GDirectoryRoleAssignments"))
            {

                var properties = new gDirectory.RoleAssignments.RoleAssignmentsListProperties()
                {
                    RoleId = this.RoleId,
                    UserKey = this.UserKey
                };


                 WriteObject(roleAssignments.List(Customer, properties));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Roles
{


    /// <summary>
    /// <para type="synopsis">Deletes a role.</para>
    /// <para type="description">Deletes a role.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryRoles -Customer $SomeCustomerString -RoleId $SomeRoleIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryRoles">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryRoles",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryRoles")]
    public class DeleteGDirectoryRolesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of the role.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the role.")]
        public string RoleId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Roles", "Delete-GDirectoryRoles"))
            {

                roles.Delete(Customer, RoleId);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieves a role.</para>
    /// <para type="description">Retrieves a role.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryRoles -Customer $SomeCustomerString -RoleId $SomeRoleIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryRoles">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryRoles",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryRoles")]
    public class GetGDirectoryRolesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of the role.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the role.")]
        public string RoleId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Roles", "Get-GDirectoryRoles"))
            {

                 WriteObject(roles.Get(Customer, RoleId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Creates a role.</para>
    /// <para type="description">Creates a role.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryRoles -Customer $SomeCustomerString -RoleBody $SomeRoleObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryRoles">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryRoles",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryRoles")]
    public class InsertGDirectoryRolesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">JSON template for role resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for role resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Role RoleBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Roles", "Insert-GDirectoryRoles"))
            {

                 WriteObject(roles.Insert(RoleBody, Customer));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieves a paginated list of all the roles in a domain.</para>
    /// <para type="description">Retrieves a paginated list of all the roles in a domain.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryRoles -Customer $SomeCustomerString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryRoles">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryRoles",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryRoles")]
    public class ListGDirectoryRolesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return.")]
        public System.Nullable<int> MaxResults { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Roles", "List-GDirectoryRoles"))
            {

                var properties = new gDirectory.Roles.RolesListProperties()
                {
                };


                 WriteObject(roles.List(Customer, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Updates a role. This method supports patch semantics.</para>
    /// <para type="description">Updates a role. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryRoles -Customer $SomeCustomerString -RoleId $SomeRoleIdString -RoleBody $SomeRoleObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryRoles">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryRoles",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryRoles")]
    public class PatchGDirectoryRolesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of the role.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the role.")]
        public string RoleId { get; set; }

        /// <summary>
        /// <para type="description">JSON template for role resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for role resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Role RoleBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Roles", "Patch-GDirectoryRoles"))
            {

                 WriteObject(roles.Patch(RoleBody, Customer, RoleId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Updates a role.</para>
    /// <para type="description">Updates a role.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryRoles -Customer $SomeCustomerString -RoleId $SomeRoleIdString -RoleBody $SomeRoleObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryRoles">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryRoles",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryRoles")]
    public class UpdateGDirectoryRolesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the Google Apps account.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of the role.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable ID of the role.")]
        public string RoleId { get; set; }

        /// <summary>
        /// <para type="description">JSON template for role resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for role resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Role RoleBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Roles", "Update-GDirectoryRoles"))
            {

                 WriteObject(roles.Update(RoleBody, Customer, RoleId));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Schemas
{


    /// <summary>
    /// <para type="synopsis">Delete schema</para>
    /// <para type="description">Delete schema</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaKey $SomeSchemaKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectorySchemas">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectorySchemas",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectorySchemas")]
    public class DeleteGDirectorySchemasCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Name or immutable Id of the schema</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name or immutable Id of the schema")]
        public string SchemaKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Schemas", "Delete-GDirectorySchemas"))
            {

                schemas.Delete(CustomerId, SchemaKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve schema</para>
    /// <para type="description">Retrieve schema</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaKey $SomeSchemaKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectorySchemas">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectorySchemas",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectorySchemas")]
    public class GetGDirectorySchemasCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Name or immutable Id of the schema</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name or immutable Id of the schema")]
        public string SchemaKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Schemas", "Get-GDirectorySchemas"))
            {

                 WriteObject(schemas.Get(CustomerId, SchemaKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Create schema.</para>
    /// <para type="description">Create schema.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaBody $SomeSchemaObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectorySchemas">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectorySchemas",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectorySchemas")]
    public class InsertGDirectorySchemasCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Schema resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Schema resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Schema SchemaBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Schemas", "Insert-GDirectorySchemas"))
            {

                 WriteObject(schemas.Insert(SchemaBody, CustomerId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve all schemas for a customer</para>
    /// <para type="description">Retrieve all schemas for a customer</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectorySchemas -CustomerId $SomeCustomerIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectorySchemas">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectorySchemas",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectorySchemas")]
    public class ListGDirectorySchemasCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Schemas", "List-GDirectorySchemas"))
            {

                 WriteObject(schemas.List(CustomerId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update schema. This method supports patch semantics.</para>
    /// <para type="description">Update schema. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaKey $SomeSchemaKeyString -SchemaBody $SomeSchemaObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectorySchemas">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectorySchemas",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectorySchemas")]
    public class PatchGDirectorySchemasCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Name or immutable Id of the schema.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name or immutable Id of the schema.")]
        public string SchemaKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Schema resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Schema resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Schema SchemaBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Schemas", "Patch-GDirectorySchemas"))
            {

                 WriteObject(schemas.Patch(SchemaBody, CustomerId, SchemaKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Update schema</para>
    /// <para type="description">Update schema</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaKey $SomeSchemaKeyString -SchemaBody $SomeSchemaObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectorySchemas">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectorySchemas",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectorySchemas")]
    public class UpdateGDirectorySchemasCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Name or immutable Id of the schema.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name or immutable Id of the schema.")]
        public string SchemaKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Schema resource in Directory API.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Schema resource in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Schema SchemaBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Schemas", "Update-GDirectorySchemas"))
            {

                 WriteObject(schemas.Update(SchemaBody, CustomerId, SchemaKey));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Tokens
{


    /// <summary>
    /// <para type="synopsis">Delete all access tokens issued by a user for an application.</para>
    /// <para type="description">Delete all access tokens issued by a user for an application.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryTokens -UserKey $SomeUserKeyString -ClientId $SomeClientIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryTokens">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryTokens",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryTokens")]
    public class DeleteGDirectoryTokensCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">The Client ID of the application the token is issued to.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The Client ID of the application the token is issued to.")]
        public string ClientId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Tokens", "Delete-GDirectoryTokens"))
            {

                tokens.Delete(UserKey, ClientId);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Get information about an access token issued by a user.</para>
    /// <para type="description">Get information about an access token issued by a user.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryTokens -UserKey $SomeUserKeyString -ClientId $SomeClientIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryTokens">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryTokens",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryTokens")]
    public class GetGDirectoryTokensCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">The Client ID of the application the token is issued to.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The Client ID of the application the token is issued to.")]
        public string ClientId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Tokens", "Get-GDirectoryTokens"))
            {

                 WriteObject(tokens.Get(UserKey, ClientId));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Returns the set of tokens specified user has issued to 3rd party applications.</para>
    /// <para type="description">Returns the set of tokens specified user has issued to 3rd party applications.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryTokens -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryTokens">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryTokens",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryTokens")]
    public class ListGDirectoryTokensCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Tokens", "List-GDirectoryTokens"))
            {

                 WriteObject(tokens.List(UserKey));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Users
{


    /// <summary>
    /// <para type="synopsis">Delete user</para>
    /// <para type="description">Delete user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryUsers -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryUsers")]
    public class DeleteGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "Delete-GDirectoryUsers"))
            {

                users.Delete(UserKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">retrieve user</para>
    /// <para type="description">retrieve user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryUsers -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryUsers")]
    public class GetGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.")]
        public string CustomFieldMask { get; set; }

        /// <summary>
        /// <para type="description">What subset of fields to fetch for this user.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "What subset of fields to fetch for this user.")]
        public UsersResource.GetRequest.ProjectionEnum? Projection { get; set; }

        /// <summary>
        /// <para type="description">Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.")]
        public UsersResource.GetRequest.ViewTypeEnum? ViewType { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "Get-GDirectoryUsers"))
            {

                var properties = new gDirectory.Users.UsersGetProperties()
                {
                    CustomFieldMask = this.CustomFieldMask,
                    Projection = this.Projection,
                    ViewType = this.ViewType
                };


                 WriteObject(users.Get(UserKey, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">create user.</para>
    /// <para type="description">create user.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryUsers -UserBody $SomeUserObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryUsers")]
    public class InsertGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">JSON template for User object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for User object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.User UserBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "Insert-GDirectoryUsers"))
            {

                 WriteObject(users.Insert(UserBody));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve either deleted users or all users in a domain (paginated)</para>
    /// <para type="description">Retrieve either deleted users or all users in a domain (paginated)</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryUsers</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryUsers")]
    public class ListGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.")]
        public string CustomFieldMask { get; set; }

        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.")]
        public string Domain { get; set; }

        /// <summary>
        /// <para type="description">Event on which subscription is intended (if subscribing)</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Event on which subscription is intended (if subscribing)")]
        public UsersResource.ListRequest.EventEnum? Event__ { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return. Default is 100. Max allowed is 500</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return. Default is 100. Max allowed is 500")]
        public System.Nullable<int> MaxResults { get; set; }

        /// <summary>
        /// <para type="description">Column to use for sorting results</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Column to use for sorting results")]
        public UsersResource.ListRequest.OrderByEnum? OrderBy { get; set; }

        /// <summary>
        /// <para type="description">What subset of fields to fetch for this user.</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "What subset of fields to fetch for this user.")]
        public UsersResource.ListRequest.ProjectionEnum? Projection { get; set; }

        /// <summary>
        /// <para type="description">Query string search. Should be of the form "". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users")]
        public string Query { get; set; }

        /// <summary>
        /// <para type="description">If set to true retrieves the list of deleted users. Default is false</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If set to true retrieves the list of deleted users. Default is false")]
        public string ShowDeleted { get; set; }

        /// <summary>
        /// <para type="description">Whether to return results in ascending or descending order.</para>
        /// </summary>
        [Parameter(Position = 9,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether to return results in ascending or descending order.")]
        public UsersResource.ListRequest.SortOrderEnum? SortOrder { get; set; }

        /// <summary>
        /// <para type="description">Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.</para>
        /// </summary>
        [Parameter(Position = 10,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.")]
        public UsersResource.ListRequest.ViewTypeEnum? ViewType { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "List-GDirectoryUsers"))
            {

                var properties = new gDirectory.Users.UsersListProperties()
                {
                    CustomFieldMask = this.CustomFieldMask,
                    Customer = this.Customer,
                    Domain = this.Domain,
                    Event = this.Event__,
                    OrderBy = this.OrderBy,
                    Projection = this.Projection,
                    Query = this.Query,
                    ShowDeleted = this.ShowDeleted,
                    SortOrder = this.SortOrder,
                    ViewType = this.ViewType
                };


                 WriteObject(users.List(properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">change admin status of a user</para>
    /// <para type="description">change admin status of a user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>MakeAdmin-GDirectoryUsers -UserKey $SomeUserKeyString -UserMakeAdminBody $SomeUserMakeAdminObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/MakeAdmin-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("MakeAdmin", "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/MakeAdmin-GDirectoryUsers")]
    public class MakeAdminGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user as admin</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user as admin")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">JSON request template for setting/revoking admin status of a user in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON request template for setting/revoking admin status of a user in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.UserMakeAdmin UserMakeAdminBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "MakeAdmin-GDirectoryUsers"))
            {

                users.MakeAdmin(UserMakeAdminBody, UserKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">update user. This method supports patch semantics.</para>
    /// <para type="description">update user. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryUsers -UserKey $SomeUserKeyString -UserBody $SomeUserObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryUsers")]
    public class PatchGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user. If Id, it should match with id of user object</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user. If Id, it should match with id of user object")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for User object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for User object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.User UserBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "Patch-GDirectoryUsers"))
            {

                 WriteObject(users.Patch(UserBody, UserKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Undelete a deleted user</para>
    /// <para type="description">Undelete a deleted user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Undelete-GDirectoryUsers -UserKey $SomeUserKeyString -UserUndeleteBody $SomeUserUndeleteObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Undelete-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Undelete", "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Undelete-GDirectoryUsers")]
    public class UndeleteGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">The immutable id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The immutable id of the user")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">JSON request template to undelete a user in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON request template to undelete a user in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.UserUndelete UserUndeleteBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "Undelete-GDirectoryUsers"))
            {

                users.Undelete(UserUndeleteBody, UserKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">update user</para>
    /// <para type="description">update user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryUsers -UserKey $SomeUserKeyString -UserBody $SomeUserObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryUsers")]
    public class UpdateGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user. If Id, it should match with id of user object</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user. If Id, it should match with id of user object")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for User object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for User object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.User UserBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "Update-GDirectoryUsers"))
            {

                 WriteObject(users.Update(UserBody, UserKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Watch for changes in users list</para>
    /// <para type="description">Watch for changes in users list</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Watch-GDirectoryUsers -ChannelBody $SomeChannelObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Watch-GDirectoryUsers">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Watch, "GDirectoryUsers",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Watch-GDirectoryUsers")]
    public class WatchGDirectoryUsersCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">An notification channel used to watch for resource changes.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "An notification channel used to watch for resource changes.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Channel ChannelBody { get; set; }

        /// <summary>
        /// <para type="description">Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.")]
        public string CustomFieldMask { get; set; }

        /// <summary>
        /// <para type="description">Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.")]
        public string Customer { get; set; }

        /// <summary>
        /// <para type="description">Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.")]
        public string Domain { get; set; }

        /// <summary>
        /// <para type="description">Event on which subscription is intended (if subscribing)</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Event on which subscription is intended (if subscribing)")]
        public UsersResource.WatchRequest.EventEnum? Event__ { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return. Default is 100. Max allowed is 500</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Maximum number of results to return. Default is 100. Max allowed is 500")]
        public System.Nullable<int> MaxResults { get; set; }

        /// <summary>
        /// <para type="description">Column to use for sorting results</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Column to use for sorting results")]
        public UsersResource.WatchRequest.OrderByEnum? OrderBy { get; set; }

        /// <summary>
        /// <para type="description">What subset of fields to fetch for this user.</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "What subset of fields to fetch for this user.")]
        public UsersResource.WatchRequest.ProjectionEnum? Projection { get; set; }

        /// <summary>
        /// <para type="description">Query string search. Should be of the form "". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users")]
        public string Query { get; set; }

        /// <summary>
        /// <para type="description">If set to true retrieves the list of deleted users. Default is false</para>
        /// </summary>
        [Parameter(Position = 9,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "If set to true retrieves the list of deleted users. Default is false")]
        public string ShowDeleted { get; set; }

        /// <summary>
        /// <para type="description">Whether to return results in ascending or descending order.</para>
        /// </summary>
        [Parameter(Position = 10,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether to return results in ascending or descending order.")]
        public UsersResource.WatchRequest.SortOrderEnum? SortOrder { get; set; }

        /// <summary>
        /// <para type="description">Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.</para>
        /// </summary>
        [Parameter(Position = 11,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.")]
        public UsersResource.WatchRequest.ViewTypeEnum? ViewType { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Users", "Watch-GDirectoryUsers"))
            {

                var properties = new gDirectory.Users.UsersWatchProperties()
                {
                    CustomFieldMask = this.CustomFieldMask,
                    Customer = this.Customer,
                    Domain = this.Domain,
                    Event = this.Event__,
                    OrderBy = this.OrderBy,
                    Projection = this.Projection,
                    Query = this.Query,
                    ShowDeleted = this.ShowDeleted,
                    SortOrder = this.SortOrder,
                    ViewType = this.ViewType
                };


                 WriteObject(users.Watch(ChannelBody, properties));
            }

        }
    }

}


namespace gShell.Cmdlets.Directory.Users.Aliases
{


    /// <summary>
    /// <para type="synopsis">Remove a alias for the user</para>
    /// <para type="description">Remove a alias for the user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryAliases -UserKey $SomeUserKeyString -Alias $SomeAliasString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryAliases")]
    public class DeleteGDirectoryAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">The alias to be removed</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The alias to be removed")]
        public string Alias { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Aliases", "Delete-GDirectoryAliases"))
            {

                users.aliases.Delete(UserKey, Alias);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Add a alias for the user</para>
    /// <para type="description">Add a alias for the user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Insert-GDirectoryAliases -UserKey $SomeUserKeyString -AliasBody $SomeAliasObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Insert-GDirectoryAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Insert", "GDirectoryAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Insert-GDirectoryAliases")]
    public class InsertGDirectoryAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Alias object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Alias object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Alias AliasBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Aliases", "Insert-GDirectoryAliases"))
            {

                 WriteObject(users.aliases.Insert(AliasBody, UserKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">List all aliases for a user</para>
    /// <para type="description">List all aliases for a user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryAliases -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryAliases")]
    public class ListGDirectoryAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">Event on which subscription is intended (if subscribing)</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Event on which subscription is intended (if subscribing)")]
        public UsersResource.AliasesResource.ListRequest.EventEnum? Event__ { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Aliases", "List-GDirectoryAliases"))
            {

                var properties = new gDirectory.Users.Aliases.AliasesListProperties()
                {
                    Event = this.Event__
                };


                 WriteObject(users.aliases.List(UserKey, properties));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Watch for changes in user aliases list</para>
    /// <para type="description">Watch for changes in user aliases list</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Watch-GDirectoryAliases -UserKey $SomeUserKeyString -ChannelBody $SomeChannelObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Watch-GDirectoryAliases">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Watch, "GDirectoryAliases",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Watch-GDirectoryAliases")]
    public class WatchGDirectoryAliasesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">An notification channel used to watch for resource changes.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "An notification channel used to watch for resource changes.")]
        public Google.Apis.admin.Directory.directory_v1.Data.Channel ChannelBody { get; set; }

        /// <summary>
        /// <para type="description">Event on which subscription is intended (if subscribing)</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Event on which subscription is intended (if subscribing)")]
        public UsersResource.AliasesResource.WatchRequest.EventEnum? Event__ { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Aliases", "Watch-GDirectoryAliases"))
            {

                var properties = new gDirectory.Users.Aliases.AliasesWatchProperties()
                {
                    Event = this.Event__
                };


                 WriteObject(users.aliases.Watch(ChannelBody, UserKey, properties));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.Users.Photos
{


    /// <summary>
    /// <para type="synopsis">Remove photos for the user</para>
    /// <para type="description">Remove photos for the user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Delete-GDirectoryPhotos -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Delete-GDirectoryPhotos">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Delete", "GDirectoryPhotos",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Delete-GDirectoryPhotos")]
    public class DeleteGDirectoryPhotosCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Photos", "Delete-GDirectoryPhotos"))
            {

                users.photos.Delete(UserKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Retrieve photo of a user</para>
    /// <para type="description">Retrieve photo of a user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GDirectoryPhotos -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDirectoryPhotos">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDirectoryPhotos",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDirectoryPhotos")]
    public class GetGDirectoryPhotosCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Photos", "Get-GDirectoryPhotos"))
            {

                 WriteObject(users.photos.Get(UserKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Add a photo for the user. This method supports patch semantics.</para>
    /// <para type="description">Add a photo for the user. This method supports patch semantics.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Patch-GDirectoryPhotos -UserKey $SomeUserKeyString -UserPhotoBody $SomeUserPhotoObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Patch-GDirectoryPhotos">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Patch", "GDirectoryPhotos",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Patch-GDirectoryPhotos")]
    public class PatchGDirectoryPhotosCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Photo object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Photo object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.UserPhoto UserPhotoBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Photos", "Patch-GDirectoryPhotos"))
            {

                 WriteObject(users.photos.Patch(UserPhotoBody, UserKey));
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Add a photo for the user</para>
    /// <para type="description">Add a photo for the user</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Update-GDirectoryPhotos -UserKey $SomeUserKeyString -UserPhotoBody $SomeUserPhotoObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Update-GDirectoryPhotos">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsData.Update, "GDirectoryPhotos",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Update-GDirectoryPhotos")]
    public class UpdateGDirectoryPhotosCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }

        /// <summary>
        /// <para type="description">JSON template for Photo object in Directory API.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipeline = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "JSON template for Photo object in Directory API.")]
        public Google.Apis.admin.Directory.directory_v1.Data.UserPhoto UserPhotoBody { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory Photos", "Update-GDirectoryPhotos"))
            {

                 WriteObject(users.photos.Update(UserPhotoBody, UserKey));
            }

        }
    }

}

namespace gShell.Cmdlets.Directory.VerificationCodes
{


    /// <summary>
    /// <para type="synopsis">Generate new backup verification codes for the user.</para>
    /// <para type="description">Generate new backup verification codes for the user.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Generate-GDirectoryVerificationCodes -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Generate-GDirectoryVerificationCodes">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Generate", "GDirectoryVerificationCodes",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Generate-GDirectoryVerificationCodes")]
    public class GenerateGDirectoryVerificationCodesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory VerificationCodes", "Generate-GDirectoryVerificationCodes"))
            {

                verificationCodes.Generate(UserKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Invalidate the current backup verification codes for the user.</para>
    /// <para type="description">Invalidate the current backup verification codes for the user.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Invalidate-GDirectoryVerificationCodes -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Invalidate-GDirectoryVerificationCodes">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("Invalidate", "GDirectoryVerificationCodes",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/Invalidate-GDirectoryVerificationCodes")]
    public class InvalidateGDirectoryVerificationCodesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email or immutable Id of the user</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email or immutable Id of the user")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory VerificationCodes", "Invalidate-GDirectoryVerificationCodes"))
            {

                verificationCodes.Invalidate(UserKey);
            }

        }
    }
    /// <summary>
    /// <para type="synopsis">Returns the current set of valid backup verification codes for the specified user.</para>
    /// <para type="description">Returns the current set of valid backup verification codes for the specified user.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>List-GDirectoryVerificationCodes -UserKey $SomeUserKeyString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/List-GDirectoryVerificationCodes">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet("List", "GDirectoryVerificationCodes",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/List-GDirectoryVerificationCodes")]
    public class ListGDirectoryVerificationCodesCommand : DirectoryServiceAccountBase
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
        public string UserKey { get; set; }
        #endregion

        protected override void ProcessRecord()
        {

            if (ShouldProcess("Directory VerificationCodes", "List-GDirectoryVerificationCodes"))
            {

                 WriteObject(verificationCodes.List(UserKey));
            }

        }
    }

}