//// gShell is licensed under the GNU GENERAL PUBLIC LICENSE, Version 3
////
//// http://www.gnu.org/licenses/gpl-3.0.en.html
////
//// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
//// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
//// specific language governing permissions and limitations under the License.
////
//// gShell is based upon https://github.com/google/google-api-dotnet-client, which is licensed under the Apache 2.0
//// license: https://github.com/google/google-api-dotnet-client/blob/master/LICENSE
////
//// gShell is reliant upon the Google Apis. Please see the specific API pages for specific licensing information.

////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was generated by a fork of google-apis-code-generator:
////       https://github.com/squid808/apis-client-generator
////
////     How neat is that? Pretty neat.
////
////     Changes to this file may cause incorrect behavior and will be lost if
////     the code is regenerated.
//// </auto-generated>
////------------------------------------------------------------------------------

//using System;
//using System.Collections;
//using System.Collections.Generic;
//using System.Linq;
//using System.Management.Automation;

//using Google.Apis.admin.Directory.directory_v1;
//using Google.Apis.admin.Directory.directory_v1.Data;

//using gDirectory = gShell.dotNet.Directory;

//namespace gShell.Cmdlets.Directory
//{
//    /// <summary>A base class which provides support for service account integration and schema objects.</summary>
//    public abstract class DirectoryServiceAccountBase : DirectoryBase
//    {
//        #region Properties

//        /// <summary>
//        /// <para type="description">The email account to be targeted by the service account.</para>
//        /// </summary>
//        [Parameter(Mandatory = false)]
//        [ValidateNotNullOrEmpty]
//        public string TargetUserEmail { get; set; }
//        #endregion

//        protected override void BeginProcessing()
//        {
//            gShellServiceAccount = TargetUserEmail;

//            base.BeginProcessing();
//        }
//    }

    

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }

//    /// <summary>
//    /// <para type="synopsis">Creates a new Directory API  object.</para>
//    /// <para type="description">This provides a Cmdlet-Based approach to creating a  object which may be required as a parameter for some other Cmdlets in the Directory API category.</para>
//    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.Directory.directory_v1.Data.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>New-GDirectoryObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/NewGDirectoryObj">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.New, "GDirectoryObj",
//    SupportsShouldProcess = true)]
//    [OutputType(typeof())]
//    public class NewGDirectoryObj : PSCmdlet
//    {
//        #region Properties

//        #endregion

//         protected override void ProcessRecord()
//        {
//            var body = new ()
//            {
//            };

//            if (ShouldProcess(""))
//            {
//                WriteObject(body);
//            }
//        }
//    }
//}



//namespace gShell.Cmdlets.Directory.Asps
//{


//    /// <summary>
//    /// <para type="synopsis">Delete an ASP issued by a user.</para>
//    /// <para type="description">Delete an ASP issued by a user.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryAsps -UserKey $SomeUserKeyString -CodeId $SomeCodeIdSystemNullable<int></code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryAsps">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryAsps",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/asps/delete")]
//    public class DeleteGDirectoryAspsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the ASP to be deleted.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the ASP to be deleted.")]
//        public int CodeId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Asps", "Delete-GDirectoryAsps"))
//            {

//                asps.Delete(UserKey, CodeId);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Get information about an ASP issued by a user.</para>
//    /// <para type="description">Get information about an ASP issued by a user.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryAsps -UserKey $SomeUserKeyString -CodeId $SomeCodeIdSystemNullable<int></code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryAsps">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryAsps",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/asps/get")]
//    public class GetGDirectoryAspsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the ASP.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the ASP.")]
//        public int CodeId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Asps", "Get-GDirectoryAsps"))
//            {

//                 WriteObject(asps.Get(UserKey, CodeId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">List the ASPs issued by a user.</para>
//    /// <para type="description">List the ASPs issued by a user.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryAsps -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryAsps">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryAsps",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/asps/list")]
//    public class ListGDirectoryAspsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Asps", "List-GDirectoryAsps"))
//            {

//                 WriteObject(asps.List(UserKey));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Channels
//{


//    /// <summary>
//    /// <para type="synopsis">Stop watching resources through this channel</para>
//    /// <para type="description">Stop watching resources through this channel</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Stop-GDirectoryChannels -ChannelBody $SomeChannelObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/StopGDirectoryChannels">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsLifecycle.Stop, "GDirectoryChannels",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/channels/stop")]
//    public class StopGDirectoryChannelsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">An notification channel used to watch for resource changes.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "An notification channel used to watch for resource changes.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Channel ChannelBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Channels", "Stop-GDirectoryChannels"))
//            {

//                channels.Stop(ChannelBody);
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Chromeosdevices
//{


//    /// <summary>
//    /// <para type="synopsis">Retrieve Chrome OS Device</para>
//    /// <para type="description">Retrieve Chrome OS Device</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryChromeosdevices -CustomerId $SomeCustomerIdString -DeviceId $SomeDeviceIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryChromeosdevices">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryChromeosdevices",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/chromeosdevices/get")]
//    public class GetGDirectoryChromeosdevicesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable id of Chrome OS Device</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of Chrome OS Device")]
//        public string DeviceId { get; set; }

//        /// <summary>
//        /// <para type="description">Restrict information returned to a set of selected fields.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Restrict information returned to a set of selected fields.")]
//        public ChromeosdevicesResource.GetRequest.ProjectionEnum? Projection { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Chromeosdevices", "Get-GDirectoryChromeosdevices"))
//            {

//                var properties = new gDirectory.Chromeosdevices.ChromeosdevicesGetProperties()
//                {
//                    Projection = this.Projection
//                };


//                 WriteObject(chromeosdevices.Get(CustomerId, DeviceId, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve all Chrome OS Devices of a customer (paginated)</para>
//    /// <para type="description">Retrieve all Chrome OS Devices of a customer (paginated)</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryChromeosdevices -CustomerId $SomeCustomerIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryChromeosdevices">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryChromeosdevices",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/chromeosdevices/list")]
//    public class ListGDirectoryChromeosdevicesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return. Default is 100</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return. Default is 100")]
//        public System.Nullable<int> MaxResults { get; set; }

//        /// <summary>
//        /// <para type="description">Column to use for sorting results</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Column to use for sorting results")]
//        public ChromeosdevicesResource.ListRequest.OrderByEnum? OrderBy { get; set; }

//        /// <summary>
//        /// <para type="description">Restrict information returned to a set of selected fields.</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Restrict information returned to a set of selected fields.")]
//        public ChromeosdevicesResource.ListRequest.ProjectionEnum? Projection { get; set; }

//        /// <summary>
//        /// <para type="description">Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?hl=en=1698333</para>
//        /// </summary>
//        [Parameter(Position = 4,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?hl=en=1698333")]
//        public string Query { get; set; }

//        /// <summary>
//        /// <para type="description">Whether to return results in ascending or descending order. Only of use when orderBy is also used</para>
//        /// </summary>
//        [Parameter(Position = 5,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Whether to return results in ascending or descending order. Only of use when orderBy is also used")]
//        public ChromeosdevicesResource.ListRequest.SortOrderEnum? SortOrder { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Chromeosdevices", "List-GDirectoryChromeosdevices"))
//            {

//                var properties = new gDirectory.Chromeosdevices.ChromeosdevicesListProperties()
//                {
//                    OrderBy = this.OrderBy,
//                    Projection = this.Projection,
//                    Query = this.Query,
//                    SortOrder = this.SortOrder
//                };


//                 WriteObject(chromeosdevices.List(CustomerId, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update Chrome OS Device. This method supports patch semantics.</para>
//    /// <para type="description">Update Chrome OS Device. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryChromeosdevices -CustomerId $SomeCustomerIdString -DeviceId $SomeDeviceIdString -ChromeOsDeviceBody $SomeChromeOsDeviceObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryChromeosdevices">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryChromeosdevices",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/chromeosdevices/patch")]
//    public class PatchGDirectoryChromeosdevicesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable id of Chrome OS Device</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of Chrome OS Device")]
//        public string DeviceId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Chrome Os Device resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Chrome Os Device resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice ChromeOsDeviceBody { get; set; }

//        /// <summary>
//        /// <para type="description">Restrict information returned to a set of selected fields.</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Restrict information returned to a set of selected fields.")]
//        public ChromeosdevicesResource.PatchRequest.ProjectionEnum? Projection { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Chromeosdevices", "Patch-GDirectoryChromeosdevices"))
//            {

//                var properties = new gDirectory.Chromeosdevices.ChromeosdevicesPatchProperties()
//                {
//                    Projection = this.Projection
//                };


//                 WriteObject(chromeosdevices.Patch(ChromeOsDeviceBody, CustomerId, DeviceId, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update Chrome OS Device</para>
//    /// <para type="description">Update Chrome OS Device</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryChromeosdevices -CustomerId $SomeCustomerIdString -DeviceId $SomeDeviceIdString -ChromeOsDeviceBody $SomeChromeOsDeviceObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryChromeosdevices">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryChromeosdevices",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/chromeosdevices/update")]
//    public class UpdateGDirectoryChromeosdevicesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable id of Chrome OS Device</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of Chrome OS Device")]
//        public string DeviceId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Chrome Os Device resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Chrome Os Device resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.ChromeOsDevice ChromeOsDeviceBody { get; set; }

//        /// <summary>
//        /// <para type="description">Restrict information returned to a set of selected fields.</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Restrict information returned to a set of selected fields.")]
//        public ChromeosdevicesResource.UpdateRequest.ProjectionEnum? Projection { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Chromeosdevices", "Update-GDirectoryChromeosdevices"))
//            {

//                var properties = new gDirectory.Chromeosdevices.ChromeosdevicesUpdateProperties()
//                {
//                    Projection = this.Projection
//                };


//                 WriteObject(chromeosdevices.Update(ChromeOsDeviceBody, CustomerId, DeviceId, properties));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Customers
//{


//    /// <summary>
//    /// <para type="synopsis">Retrives a customer.</para>
//    /// <para type="description">Retrives a customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryCustomers -CustomerKey $SomeCustomerKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryCustomers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryCustomers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/customers/get")]
//    public class GetGDirectoryCustomersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Id of the customer to be retrieved</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Id of the customer to be retrieved")]
//        public string CustomerKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Customers", "Get-GDirectoryCustomers"))
//            {

//                 WriteObject(customers.Get(CustomerKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Updates a customer. This method supports patch semantics.</para>
//    /// <para type="description">Updates a customer. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryCustomers -CustomerKey $SomeCustomerKeyString -CustomerBody $SomeCustomerObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryCustomers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryCustomers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/customers/patch")]
//    public class PatchGDirectoryCustomersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Id of the customer to be updated</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Id of the customer to be updated")]
//        public string CustomerKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Customer Resource object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Customer Resource object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Customer CustomerBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Customers", "Patch-GDirectoryCustomers"))
//            {

//                 WriteObject(customers.Patch(CustomerBody, CustomerKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Updates a customer.</para>
//    /// <para type="description">Updates a customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryCustomers -CustomerKey $SomeCustomerKeyString -CustomerBody $SomeCustomerObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryCustomers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryCustomers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/customers/update")]
//    public class UpdateGDirectoryCustomersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Id of the customer to be updated</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Id of the customer to be updated")]
//        public string CustomerKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Customer Resource object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Customer Resource object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Customer CustomerBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Customers", "Update-GDirectoryCustomers"))
//            {

//                 WriteObject(customers.Update(CustomerBody, CustomerKey));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.DomainAliases
//{


//    /// <summary>
//    /// <para type="synopsis">Deletes a Domain Alias of the customer.</para>
//    /// <para type="description">Deletes a Domain Alias of the customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryDomainAliases -Customer $SomeCustomerString -DomainAliasName $SomeDomainAliasNameString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryDomainAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryDomainAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/domainAliases/delete")]
//    public class DeleteGDirectoryDomainAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Name of domain alias to be retrieved.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name of domain alias to be retrieved.")]
//        public string DomainAliasName { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory DomainAliases", "Delete-GDirectoryDomainAliases"))
//            {

//                domainAliases.Delete(Customer, DomainAliasName);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieves a domain alias of the customer.</para>
//    /// <para type="description">Retrieves a domain alias of the customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryDomainAliases -Customer $SomeCustomerString -DomainAliasName $SomeDomainAliasNameString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryDomainAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryDomainAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/domainAliases/get")]
//    public class GetGDirectoryDomainAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Name of domain alias to be retrieved.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name of domain alias to be retrieved.")]
//        public string DomainAliasName { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory DomainAliases", "Get-GDirectoryDomainAliases"))
//            {

//                 WriteObject(domainAliases.Get(Customer, DomainAliasName));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Inserts a Domain alias of the customer.</para>
//    /// <para type="description">Inserts a Domain alias of the customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryDomainAliases -Customer $SomeCustomerString -DomainAliasBody $SomeDomainAliasObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryDomainAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryDomainAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/domainAliases/insert")]
//    public class InsertGDirectoryDomainAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Domain Alias object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Domain Alias object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.DomainAlias DomainAliasBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory DomainAliases", "Insert-GDirectoryDomainAliases"))
//            {

//                 WriteObject(domainAliases.Insert(DomainAliasBody, Customer));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Lists the domain aliases of the customer.</para>
//    /// <para type="description">Lists the domain aliases of the customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryDomainAliases -Customer $SomeCustomerString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryDomainAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryDomainAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/domainAliases/list")]
//    public class ListGDirectoryDomainAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Name of the parent domain for which domain aliases are to be fetched.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name of the parent domain for which domain aliases are to be fetched.")]
//        public string ParentDomainName { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory DomainAliases", "List-GDirectoryDomainAliases"))
//            {

//                var properties = new gDirectory.DomainAliases.DomainAliasesListProperties()
//                {
//                    ParentDomainName = this.ParentDomainName
//                };


//                 WriteObject(domainAliases.List(Customer, properties));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Domains
//{


//    /// <summary>
//    /// <para type="synopsis">Deletes a domain of the customer.</para>
//    /// <para type="description">Deletes a domain of the customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryDomains -Customer $SomeCustomerString -DomainName $SomeDomainNameString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryDomains">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryDomains",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/domains/delete")]
//    public class DeleteGDirectoryDomainsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Name of domain to be deleted</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name of domain to be deleted")]
//        public string DomainName { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Domains", "Delete-GDirectoryDomains"))
//            {

//                domains.Delete(Customer, DomainName);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrives a domain of the customer.</para>
//    /// <para type="description">Retrives a domain of the customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryDomains -Customer $SomeCustomerString -DomainName $SomeDomainNameString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryDomains">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryDomains",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/domains/get")]
//    public class GetGDirectoryDomainsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Name of domain to be retrieved</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name of domain to be retrieved")]
//        public string DomainName { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Domains", "Get-GDirectoryDomains"))
//            {

//                 WriteObject(domains.Get(Customer, DomainName));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Inserts a domain of the customer.</para>
//    /// <para type="description">Inserts a domain of the customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryDomains -Customer $SomeCustomerString -DomainsBody $SomeDomainsObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryDomains">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryDomains",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/domains/insert")]
//    public class InsertGDirectoryDomainsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Domain object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Domain object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Domains DomainsBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Domains", "Insert-GDirectoryDomains"))
//            {

//                 WriteObject(domains.Insert(DomainsBody, Customer));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Lists the domains of the customer.</para>
//    /// <para type="description">Lists the domains of the customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryDomains -Customer $SomeCustomerString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryDomains">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryDomains",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/domains/list")]
//    public class ListGDirectoryDomainsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Domains", "List-GDirectoryDomains"))
//            {

//                 WriteObject(domains.List(Customer));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Groups
//{


//    /// <summary>
//    /// <para type="synopsis">Delete Group</para>
//    /// <para type="description">Delete Group</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryGroups -GroupKey $SomeGroupKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryGroups">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryGroups",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/delete")]
//    public class DeleteGDirectoryGroupsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Groups", "Delete-GDirectoryGroups"))
//            {

//                groups.Delete(GroupKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve Group</para>
//    /// <para type="description">Retrieve Group</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryGroups -GroupKey $SomeGroupKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryGroups">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryGroups",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/get")]
//    public class GetGDirectoryGroupsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Groups", "Get-GDirectoryGroups"))
//            {

//                 WriteObject(groups.Get(GroupKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Create Group</para>
//    /// <para type="description">Create Group</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryGroups -GroupBody $SomeGroupObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryGroups">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryGroups",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/insert")]
//    public class InsertGDirectoryGroupsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">JSON template for Group resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Group resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Group GroupBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Groups", "Insert-GDirectoryGroups"))
//            {

//                 WriteObject(groups.Insert(GroupBody));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve all groups in a domain (paginated)</para>
//    /// <para type="description">Retrieve all groups in a domain (paginated)</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryGroups</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryGroups">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryGroups",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/list")]
//    public class ListGDirectoryGroupsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account. In case of multi-domain, to fetch all groups for a customer, fill this field instead of domain.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account. In case of multi-domain, to fetch all groups for a customer, fill this field instead of domain.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Name of the domain. Fill this field to get groups from only this domain. To return all groups in a multi-domain fill customer field instead.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name of the domain. Fill this field to get groups from only this domain. To return all groups in a multi-domain fill customer field instead.")]
//        public string Domain { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return. Default is 200</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return. Default is 200")]
//        public System.Nullable<int> MaxResults { get; set; }

//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user if only those groups are to be listed, the given user is a member of. If Id, it should match with id of user object</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user if only those groups are to be listed, the given user is a member of. If Id, it should match with id of user object")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Groups", "List-GDirectoryGroups"))
//            {

//                var properties = new gDirectory.Groups.GroupsListProperties()
//                {
//                    Customer = this.Customer,
//                    Domain = this.Domain,
//                    UserKey = this.UserKey
//                };


//                 WriteObject(groups.List(properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update Group. This method supports patch semantics.</para>
//    /// <para type="description">Update Group. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryGroups -GroupKey $SomeGroupKeyString -GroupBody $SomeGroupObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryGroups">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryGroups",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/patch")]
//    public class PatchGDirectoryGroupsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group. If Id, it should match with id of group object</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group. If Id, it should match with id of group object")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Group resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Group resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Group GroupBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Groups", "Patch-GDirectoryGroups"))
//            {

//                 WriteObject(groups.Patch(GroupBody, GroupKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update Group</para>
//    /// <para type="description">Update Group</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryGroups -GroupKey $SomeGroupKeyString -GroupBody $SomeGroupObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryGroups">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryGroups",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/update")]
//    public class UpdateGDirectoryGroupsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group. If Id, it should match with id of group object</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group. If Id, it should match with id of group object")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Group resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Group resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Group GroupBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Groups", "Update-GDirectoryGroups"))
//            {

//                 WriteObject(groups.Update(GroupBody, GroupKey));
//            }

//        }
//    }

//}


//namespace gShell.Cmdlets.Directory.Groups.Aliases
//{


//    /// <summary>
//    /// <para type="synopsis">Remove a alias for the group</para>
//    /// <para type="description">Remove a alias for the group</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryAliases -GroupKey $SomeGroupKeyString -Alias $SomeAliasString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/aliases/delete")]
//    public class DeleteGDirectoryAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">The alias to be removed</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The alias to be removed")]
//        public string Alias { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Aliases", "Delete-GDirectoryAliases"))
//            {

//                groups.aliases.Delete(GroupKey, Alias);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Add a alias for the group</para>
//    /// <para type="description">Add a alias for the group</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryAliases -GroupKey $SomeGroupKeyString -AliasBody $SomeAliasObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/aliases/insert")]
//    public class InsertGDirectoryAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Alias object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Alias object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Alias AliasBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Aliases", "Insert-GDirectoryAliases"))
//            {

//                 WriteObject(groups.aliases.Insert(AliasBody, GroupKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">List all aliases for a group</para>
//    /// <para type="description">List all aliases for a group</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryAliases -GroupKey $SomeGroupKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/groups/aliases/list")]
//    public class ListGDirectoryAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Aliases", "List-GDirectoryAliases"))
//            {

//                 WriteObject(groups.aliases.List(GroupKey));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Members
//{


//    /// <summary>
//    /// <para type="synopsis">Remove membership.</para>
//    /// <para type="description">Remove membership.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberKey $SomeMemberKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryMembers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryMembers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/members/delete")]
//    public class DeleteGDirectoryMembersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">Email or immutable Id of the member</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the member")]
//        public string MemberKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Members", "Delete-GDirectoryMembers"))
//            {

//                members.Delete(GroupKey, MemberKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve Group Member</para>
//    /// <para type="description">Retrieve Group Member</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberKey $SomeMemberKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryMembers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryMembers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/members/get")]
//    public class GetGDirectoryMembersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">Email or immutable Id of the member</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the member")]
//        public string MemberKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Members", "Get-GDirectoryMembers"))
//            {

//                 WriteObject(members.Get(GroupKey, MemberKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Add user to the specified group.</para>
//    /// <para type="description">Add user to the specified group.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberBody $SomeMemberObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryMembers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryMembers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/members/insert")]
//    public class InsertGDirectoryMembersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Member resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Member resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Member MemberBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Members", "Insert-GDirectoryMembers"))
//            {

//                 WriteObject(members.Insert(MemberBody, GroupKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve all members in a group (paginated)</para>
//    /// <para type="description">Retrieve all members in a group (paginated)</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryMembers -GroupKey $SomeGroupKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryMembers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryMembers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/members/list")]
//    public class ListGDirectoryMembersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return. Default is 200</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return. Default is 200")]
//        public System.Nullable<int> MaxResults { get; set; }

//        /// <summary>
//        /// <para type="description">Comma separated role values to filter list results on.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Comma separated role values to filter list results on.")]
//        public string Roles { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Members", "List-GDirectoryMembers"))
//            {

//                var properties = new gDirectory.Members.MembersListProperties()
//                {
//                    Roles = this.Roles
//                };


//                 WriteObject(members.List(GroupKey, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update membership of a user in the specified group. This method supports patch semantics.</para>
//    /// <para type="description">Update membership of a user in the specified group. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberKey $SomeMemberKeyString -MemberBody $SomeMemberObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryMembers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryMembers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/members/patch")]
//    public class PatchGDirectoryMembersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group. If Id, it should match with id of group object</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group. If Id, it should match with id of group object")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user. If Id, it should match with id of member object</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user. If Id, it should match with id of member object")]
//        public string MemberKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Member resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Member resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Member MemberBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Members", "Patch-GDirectoryMembers"))
//            {

//                 WriteObject(members.Patch(MemberBody, GroupKey, MemberKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update membership of a user in the specified group.</para>
//    /// <para type="description">Update membership of a user in the specified group.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryMembers -GroupKey $SomeGroupKeyString -MemberKey $SomeMemberKeyString -MemberBody $SomeMemberObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryMembers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryMembers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/members/update")]
//    public class UpdateGDirectoryMembersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the group. If Id, it should match with id of group object</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the group. If Id, it should match with id of group object")]
//        public string GroupKey { get; set; }

//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user. If Id, it should match with id of member object</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user. If Id, it should match with id of member object")]
//        public string MemberKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Member resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Member resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Member MemberBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Members", "Update-GDirectoryMembers"))
//            {

//                 WriteObject(members.Update(MemberBody, GroupKey, MemberKey));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Mobiledevices
//{


//    /// <summary>
//    /// <para type="synopsis">Take action on Mobile Device</para>
//    /// <para type="description">Take action on Mobile Device</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Action-GDirectoryMobiledevices -CustomerId $SomeCustomerIdString -ResourceId $SomeResourceIdString -MobileDeviceActionBody $SomeMobileDeviceActionObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ActionGDirectoryMobiledevices">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Action", "GDirectoryMobiledevices",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/mobiledevices/action")]
//    public class ActionGDirectoryMobiledevicesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable id of Mobile Device</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of Mobile Device")]
//        public string ResourceId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON request template for firing commands on Mobile Device in Directory Devices API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON request template for firing commands on Mobile Device in Directory Devices API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.MobileDeviceAction MobileDeviceActionBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Mobiledevices", "Action-GDirectoryMobiledevices"))
//            {

//                mobiledevices.Action(MobileDeviceActionBody, CustomerId, ResourceId);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Delete Mobile Device</para>
//    /// <para type="description">Delete Mobile Device</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryMobiledevices -CustomerId $SomeCustomerIdString -ResourceId $SomeResourceIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryMobiledevices">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryMobiledevices",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/mobiledevices/delete")]
//    public class DeleteGDirectoryMobiledevicesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable id of Mobile Device</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of Mobile Device")]
//        public string ResourceId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Mobiledevices", "Delete-GDirectoryMobiledevices"))
//            {

//                mobiledevices.Delete(CustomerId, ResourceId);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve Mobile Device</para>
//    /// <para type="description">Retrieve Mobile Device</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryMobiledevices -CustomerId $SomeCustomerIdString -ResourceId $SomeResourceIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryMobiledevices">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryMobiledevices",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/mobiledevices/get")]
//    public class GetGDirectoryMobiledevicesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable id of Mobile Device</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of Mobile Device")]
//        public string ResourceId { get; set; }

//        /// <summary>
//        /// <para type="description">Restrict information returned to a set of selected fields.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Restrict information returned to a set of selected fields.")]
//        public MobiledevicesResource.GetRequest.ProjectionEnum? Projection { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Mobiledevices", "Get-GDirectoryMobiledevices"))
//            {

//                var properties = new gDirectory.Mobiledevices.MobiledevicesGetProperties()
//                {
//                    Projection = this.Projection
//                };


//                 WriteObject(mobiledevices.Get(CustomerId, ResourceId, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve all Mobile Devices of a customer (paginated)</para>
//    /// <para type="description">Retrieve all Mobile Devices of a customer (paginated)</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryMobiledevices -CustomerId $SomeCustomerIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryMobiledevices">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryMobiledevices",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/mobiledevices/list")]
//    public class ListGDirectoryMobiledevicesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return. Default is 100</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return. Default is 100")]
//        public System.Nullable<int> MaxResults { get; set; }

//        /// <summary>
//        /// <para type="description">Column to use for sorting results</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Column to use for sorting results")]
//        public MobiledevicesResource.ListRequest.OrderByEnum? OrderBy { get; set; }

//        /// <summary>
//        /// <para type="description">Restrict information returned to a set of selected fields.</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Restrict information returned to a set of selected fields.")]
//        public MobiledevicesResource.ListRequest.ProjectionEnum? Projection { get; set; }

//        /// <summary>
//        /// <para type="description">Search string in the format given at http://support.google.com/a/bin/answer.py?hl=en=1408863#search</para>
//        /// </summary>
//        [Parameter(Position = 4,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Search string in the format given at http://support.google.com/a/bin/answer.py?hl=en=1408863#search")]
//        public string Query { get; set; }

//        /// <summary>
//        /// <para type="description">Whether to return results in ascending or descending order. Only of use when orderBy is also used</para>
//        /// </summary>
//        [Parameter(Position = 5,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Whether to return results in ascending or descending order. Only of use when orderBy is also used")]
//        public MobiledevicesResource.ListRequest.SortOrderEnum? SortOrder { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Mobiledevices", "List-GDirectoryMobiledevices"))
//            {

//                var properties = new gDirectory.Mobiledevices.MobiledevicesListProperties()
//                {
//                    OrderBy = this.OrderBy,
//                    Projection = this.Projection,
//                    Query = this.Query,
//                    SortOrder = this.SortOrder
//                };


//                 WriteObject(mobiledevices.List(CustomerId, properties));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Notifications
//{


//    /// <summary>
//    /// <para type="synopsis">Deletes a notification</para>
//    /// <para type="description">Deletes a notification</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryNotifications -Customer $SomeCustomerString -NotificationId $SomeNotificationIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryNotifications">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryNotifications",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/notifications/delete")]
//    public class DeleteGDirectoryNotificationsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account. The customerId is also returned as part of the Users resource.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account. The customerId is also returned as part of the Users resource.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the notification.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the notification.")]
//        public string NotificationId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Notifications", "Delete-GDirectoryNotifications"))
//            {

//                notifications.Delete(Customer, NotificationId);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieves a notification.</para>
//    /// <para type="description">Retrieves a notification.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryNotifications -Customer $SomeCustomerString -NotificationId $SomeNotificationIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryNotifications">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryNotifications",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/notifications/get")]
//    public class GetGDirectoryNotificationsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account. The customerId is also returned as part of the Users resource.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account. The customerId is also returned as part of the Users resource.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the notification.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the notification.")]
//        public string NotificationId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Notifications", "Get-GDirectoryNotifications"))
//            {

//                 WriteObject(notifications.Get(Customer, NotificationId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieves a list of notifications.</para>
//    /// <para type="description">Retrieves a list of notifications.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryNotifications -Customer $SomeCustomerString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryNotifications">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryNotifications",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/notifications/list")]
//    public class ListGDirectoryNotificationsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The ISO 639-1 code of the language notifications are returned in. The default is English (en).</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The ISO 639-1 code of the language notifications are returned in. The default is English (en).")]
//        public string Language { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of notifications to return per page. The default is 100.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of notifications to return per page. The default is 100.")]
//        public System.Nullable<long> MaxResults { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Notifications", "List-GDirectoryNotifications"))
//            {

//                var properties = new gDirectory.Notifications.NotificationsListProperties()
//                {
//                    Language = this.Language
//                };


//                 WriteObject(notifications.List(Customer, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Updates a notification. This method supports patch semantics.</para>
//    /// <para type="description">Updates a notification. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryNotifications -Customer $SomeCustomerString -NotificationId $SomeNotificationIdString -NotificationBody $SomeNotificationObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryNotifications">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryNotifications",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/notifications/patch")]
//    public class PatchGDirectoryNotificationsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the notification.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the notification.")]
//        public string NotificationId { get; set; }

//        /// <summary>
//        /// <para type="description">Template for a notification resource.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Template for a notification resource.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Notification NotificationBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Notifications", "Patch-GDirectoryNotifications"))
//            {

//                 WriteObject(notifications.Patch(NotificationBody, Customer, NotificationId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Updates a notification.</para>
//    /// <para type="description">Updates a notification.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryNotifications -Customer $SomeCustomerString -NotificationId $SomeNotificationIdString -NotificationBody $SomeNotificationObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryNotifications">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryNotifications",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/notifications/update")]
//    public class UpdateGDirectoryNotificationsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the notification.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the notification.")]
//        public string NotificationId { get; set; }

//        /// <summary>
//        /// <para type="description">Template for a notification resource.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Template for a notification resource.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Notification NotificationBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Notifications", "Update-GDirectoryNotifications"))
//            {

//                 WriteObject(notifications.Update(NotificationBody, Customer, NotificationId));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Orgunits
//{


//    /// <summary>
//    /// <para type="synopsis">Remove Organization Unit</para>
//    /// <para type="description">Remove Organization Unit</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitPath @("some","strings")</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryOrgunits",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/orgunits/delete")]
//    public class DeleteGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Full path of the organization unit or its Id</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Full path of the organization unit or its Id")]
//        public string[] OrgUnitPath { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Orgunits", "Delete-GDirectoryOrgunits"))
//            {

//                orgunits.Delete(CustomerId, OrgUnitPath);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve Organization Unit</para>
//    /// <para type="description">Retrieve Organization Unit</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitPath @("some","strings")</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryOrgunits",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/orgunits/get")]
//    public class GetGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Full path of the organization unit or its Id</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Full path of the organization unit or its Id")]
//        public string[] OrgUnitPath { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Orgunits", "Get-GDirectoryOrgunits"))
//            {

//                 WriteObject(orgunits.Get(CustomerId, OrgUnitPath));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Add Organization Unit</para>
//    /// <para type="description">Add Organization Unit</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitBody $SomeOrgUnitObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryOrgunits",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/orgunits/insert")]
//    public class InsertGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Org Unit resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Org Unit resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.OrgUnit OrgUnitBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Orgunits", "Insert-GDirectoryOrgunits"))
//            {

//                 WriteObject(orgunits.Insert(OrgUnitBody, CustomerId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve all Organization Units</para>
//    /// <para type="description">Retrieve all Organization Units</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryOrgunits -CustomerId $SomeCustomerIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryOrgunits",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/orgunits/list")]
//    public class ListGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">the URL-encoded organization unit's path or its Id</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "the URL-encoded organization unit's path or its Id")]
//        public string OrgUnitPath { get; set; }

//        /// <summary>
//        /// <para type="description">Whether to return all sub-organizations or just immediate children</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Whether to return all sub-organizations or just immediate children")]
//        public OrgunitsResource.ListRequest.TypeEnum? Type { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Orgunits", "List-GDirectoryOrgunits"))
//            {

//                var properties = new gDirectory.Orgunits.OrgunitsListProperties()
//                {
//                    OrgUnitPath = this.OrgUnitPath,
//                    Type = this.Type
//                };


//                 WriteObject(orgunits.List(CustomerId, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update Organization Unit. This method supports patch semantics.</para>
//    /// <para type="description">Update Organization Unit. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitPath @("some","strings") -OrgUnitBody $SomeOrgUnitObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryOrgunits",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/orgunits/patch")]
//    public class PatchGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Full path of the organization unit or its Id</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Full path of the organization unit or its Id")]
//        public string[] OrgUnitPath { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Org Unit resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Org Unit resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.OrgUnit OrgUnitBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Orgunits", "Patch-GDirectoryOrgunits"))
//            {

//                 WriteObject(orgunits.Patch(OrgUnitBody, CustomerId, OrgUnitPath));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update Organization Unit</para>
//    /// <para type="description">Update Organization Unit</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryOrgunits -CustomerId $SomeCustomerIdString -OrgUnitPath @("some","strings") -OrgUnitBody $SomeOrgUnitObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryOrgunits">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryOrgunits",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/orgunits/update")]
//    public class UpdateGDirectoryOrgunitsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Full path of the organization unit or its Id</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Full path of the organization unit or its Id")]
//        public string[] OrgUnitPath { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Org Unit resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Org Unit resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.OrgUnit OrgUnitBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Orgunits", "Update-GDirectoryOrgunits"))
//            {

//                 WriteObject(orgunits.Update(OrgUnitBody, CustomerId, OrgUnitPath));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Privileges
//{


//    /// <summary>
//    /// <para type="synopsis">Retrieves a paginated list of all privileges for a customer.</para>
//    /// <para type="description">Retrieves a paginated list of all privileges for a customer.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryPrivileges -Customer $SomeCustomerString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryPrivileges">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryPrivileges",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/privileges/list")]
//    public class ListGDirectoryPrivilegesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Privileges", "List-GDirectoryPrivileges"))
//            {

//                 WriteObject(privileges.List(Customer));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Resources
//{



//}


//namespace gShell.Cmdlets.Directory.Resources.Calendars
//{


//    /// <summary>
//    /// <para type="synopsis">Deletes a calendar resource.</para>
//    /// <para type="description">Deletes a calendar resource.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceId $SomeCalendarResourceIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryCalendars">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryCalendars",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/resources/calendars/delete")]
//    public class DeleteGDirectoryCalendarsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the calendar resource to delete.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the calendar resource to delete.")]
//        public string CalendarResourceId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Calendars", "Delete-GDirectoryCalendars"))
//            {

//                resources.calendars.Delete(Customer, CalendarResourceId);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieves a calendar resource.</para>
//    /// <para type="description">Retrieves a calendar resource.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceId $SomeCalendarResourceIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryCalendars">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryCalendars",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/resources/calendars/get")]
//    public class GetGDirectoryCalendarsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the calendar resource to retrieve.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the calendar resource to retrieve.")]
//        public string CalendarResourceId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Calendars", "Get-GDirectoryCalendars"))
//            {

//                 WriteObject(resources.calendars.Get(Customer, CalendarResourceId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Inserts a calendar resource.</para>
//    /// <para type="description">Inserts a calendar resource.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceBody $SomeCalendarResourceObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryCalendars">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryCalendars",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/resources/calendars/insert")]
//    public class InsertGDirectoryCalendarsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Calendar Resource object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Calendar Resource object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.CalendarResource CalendarResourceBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Calendars", "Insert-GDirectoryCalendars"))
//            {

//                 WriteObject(resources.calendars.Insert(CalendarResourceBody, Customer));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieves a list of calendar resources for an account.</para>
//    /// <para type="description">Retrieves a list of calendar resources for an account.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryCalendars -Customer $SomeCustomerString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryCalendars">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryCalendars",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/resources/calendars/list")]
//    public class ListGDirectoryCalendarsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return.")]
//        public System.Nullable<int> MaxResults { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Calendars", "List-GDirectoryCalendars"))
//            {

//                var properties = new gDirectory.Resources.Calendars.CalendarsListProperties()
//                {
//                };


//                 WriteObject(resources.calendars.List(Customer, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Updates a calendar resource. This method supports patch semantics.</para>
//    /// <para type="description">Updates a calendar resource. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceId $SomeCalendarResourceIdString -CalendarResourceBody $SomeCalendarResourceObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryCalendars">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryCalendars",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/resources/calendars/patch")]
//    public class PatchGDirectoryCalendarsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the calendar resource to update.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the calendar resource to update.")]
//        public string CalendarResourceId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Calendar Resource object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Calendar Resource object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.CalendarResource CalendarResourceBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Calendars", "Patch-GDirectoryCalendars"))
//            {

//                 WriteObject(resources.calendars.Patch(CalendarResourceBody, Customer, CalendarResourceId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Updates a calendar resource.</para>
//    /// <para type="description">Updates a calendar resource.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryCalendars -Customer $SomeCustomerString -CalendarResourceId $SomeCalendarResourceIdString -CalendarResourceBody $SomeCalendarResourceObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryCalendars">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryCalendars",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/resources/calendars/update")]
//    public class UpdateGDirectoryCalendarsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID for the customer's Google account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">The unique ID of the calendar resource to update.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The unique ID of the calendar resource to update.")]
//        public string CalendarResourceId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Calendar Resource object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Calendar Resource object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.CalendarResource CalendarResourceBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Calendars", "Update-GDirectoryCalendars"))
//            {

//                 WriteObject(resources.calendars.Update(CalendarResourceBody, Customer, CalendarResourceId));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.RoleAssignments
//{


//    /// <summary>
//    /// <para type="synopsis">Deletes a role assignment.</para>
//    /// <para type="description">Deletes a role assignment.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryRoleAssignments -Customer $SomeCustomerString -RoleAssignmentId $SomeRoleAssignmentIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryRoleAssignments">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryRoleAssignments",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roleAssignments/delete")]
//    public class DeleteGDirectoryRoleAssignmentsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable ID of the role assignment.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the role assignment.")]
//        public string RoleAssignmentId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory RoleAssignments", "Delete-GDirectoryRoleAssignments"))
//            {

//                roleAssignments.Delete(Customer, RoleAssignmentId);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve a role assignment.</para>
//    /// <para type="description">Retrieve a role assignment.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryRoleAssignments -Customer $SomeCustomerString -RoleAssignmentId $SomeRoleAssignmentIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryRoleAssignments">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryRoleAssignments",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roleAssignments/get")]
//    public class GetGDirectoryRoleAssignmentsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable ID of the role assignment.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the role assignment.")]
//        public string RoleAssignmentId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory RoleAssignments", "Get-GDirectoryRoleAssignments"))
//            {

//                 WriteObject(roleAssignments.Get(Customer, RoleAssignmentId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Creates a role assignment.</para>
//    /// <para type="description">Creates a role assignment.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryRoleAssignments -Customer $SomeCustomerString -RoleAssignmentBody $SomeRoleAssignmentObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryRoleAssignments">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryRoleAssignments",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roleAssignments/insert")]
//    public class InsertGDirectoryRoleAssignmentsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for roleAssignment resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for roleAssignment resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.RoleAssignment RoleAssignmentBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory RoleAssignments", "Insert-GDirectoryRoleAssignments"))
//            {

//                 WriteObject(roleAssignments.Insert(RoleAssignmentBody, Customer));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieves a paginated list of all roleAssignments.</para>
//    /// <para type="description">Retrieves a paginated list of all roleAssignments.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryRoleAssignments -Customer $SomeCustomerString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryRoleAssignments">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryRoleAssignments",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roleAssignments/list")]
//    public class ListGDirectoryRoleAssignmentsCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return.")]
//        public System.Nullable<int> MaxResults { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.")]
//        public string RoleId { get; set; }

//        /// <summary>
//        /// <para type="description">The user's primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The user's primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory RoleAssignments", "List-GDirectoryRoleAssignments"))
//            {

//                var properties = new gDirectory.RoleAssignments.RoleAssignmentsListProperties()
//                {
//                    RoleId = this.RoleId,
//                    UserKey = this.UserKey
//                };


//                 WriteObject(roleAssignments.List(Customer, properties));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Roles
//{


//    /// <summary>
//    /// <para type="synopsis">Deletes a role.</para>
//    /// <para type="description">Deletes a role.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryRoles -Customer $SomeCustomerString -RoleId $SomeRoleIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryRoles">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryRoles",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roles/delete")]
//    public class DeleteGDirectoryRolesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable ID of the role.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the role.")]
//        public string RoleId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Roles", "Delete-GDirectoryRoles"))
//            {

//                roles.Delete(Customer, RoleId);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieves a role.</para>
//    /// <para type="description">Retrieves a role.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryRoles -Customer $SomeCustomerString -RoleId $SomeRoleIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryRoles">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryRoles",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roles/get")]
//    public class GetGDirectoryRolesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable ID of the role.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the role.")]
//        public string RoleId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Roles", "Get-GDirectoryRoles"))
//            {

//                 WriteObject(roles.Get(Customer, RoleId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Creates a role.</para>
//    /// <para type="description">Creates a role.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryRoles -Customer $SomeCustomerString -RoleBody $SomeRoleObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryRoles">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryRoles",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roles/insert")]
//    public class InsertGDirectoryRolesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for role resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for role resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Role RoleBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Roles", "Insert-GDirectoryRoles"))
//            {

//                 WriteObject(roles.Insert(RoleBody, Customer));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieves a paginated list of all the roles in a domain.</para>
//    /// <para type="description">Retrieves a paginated list of all the roles in a domain.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryRoles -Customer $SomeCustomerString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryRoles">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryRoles",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roles/list")]
//    public class ListGDirectoryRolesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return.")]
//        public System.Nullable<int> MaxResults { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Roles", "List-GDirectoryRoles"))
//            {

//                var properties = new gDirectory.Roles.RolesListProperties()
//                {
//                };


//                 WriteObject(roles.List(Customer, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Updates a role. This method supports patch semantics.</para>
//    /// <para type="description">Updates a role. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryRoles -Customer $SomeCustomerString -RoleId $SomeRoleIdString -RoleBody $SomeRoleObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryRoles">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryRoles",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roles/patch")]
//    public class PatchGDirectoryRolesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable ID of the role.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the role.")]
//        public string RoleId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for role resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for role resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Role RoleBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Roles", "Patch-GDirectoryRoles"))
//            {

//                 WriteObject(roles.Patch(RoleBody, Customer, RoleId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Updates a role.</para>
//    /// <para type="description">Updates a role.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryRoles -Customer $SomeCustomerString -RoleId $SomeRoleIdString -RoleBody $SomeRoleObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryRoles">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryRoles",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/roles/update")]
//    public class UpdateGDirectoryRolesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable ID of the Google Apps account.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the Google Apps account.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable ID of the role.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable ID of the role.")]
//        public string RoleId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for role resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for role resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Role RoleBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Roles", "Update-GDirectoryRoles"))
//            {

//                 WriteObject(roles.Update(RoleBody, Customer, RoleId));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Schemas
//{


//    /// <summary>
//    /// <para type="synopsis">Delete schema</para>
//    /// <para type="description">Delete schema</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaKey $SomeSchemaKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectorySchemas">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectorySchemas",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/schemas/delete")]
//    public class DeleteGDirectorySchemasCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Name or immutable Id of the schema</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name or immutable Id of the schema")]
//        public string SchemaKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Schemas", "Delete-GDirectorySchemas"))
//            {

//                schemas.Delete(CustomerId, SchemaKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve schema</para>
//    /// <para type="description">Retrieve schema</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaKey $SomeSchemaKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectorySchemas">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectorySchemas",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/schemas/get")]
//    public class GetGDirectorySchemasCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Name or immutable Id of the schema</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name or immutable Id of the schema")]
//        public string SchemaKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Schemas", "Get-GDirectorySchemas"))
//            {

//                 WriteObject(schemas.Get(CustomerId, SchemaKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Create schema.</para>
//    /// <para type="description">Create schema.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaBody $SomeSchemaObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectorySchemas">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectorySchemas",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/schemas/insert")]
//    public class InsertGDirectorySchemasCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Schema resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Schema resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Schema SchemaBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Schemas", "Insert-GDirectorySchemas"))
//            {

//                 WriteObject(schemas.Insert(SchemaBody, CustomerId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve all schemas for a customer</para>
//    /// <para type="description">Retrieve all schemas for a customer</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectorySchemas -CustomerId $SomeCustomerIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectorySchemas">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectorySchemas",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/schemas/list")]
//    public class ListGDirectorySchemasCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Schemas", "List-GDirectorySchemas"))
//            {

//                 WriteObject(schemas.List(CustomerId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update schema. This method supports patch semantics.</para>
//    /// <para type="description">Update schema. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaKey $SomeSchemaKeyString -SchemaBody $SomeSchemaObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectorySchemas">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectorySchemas",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/schemas/patch")]
//    public class PatchGDirectorySchemasCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Name or immutable Id of the schema.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name or immutable Id of the schema.")]
//        public string SchemaKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Schema resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Schema resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Schema SchemaBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Schemas", "Patch-GDirectorySchemas"))
//            {

//                 WriteObject(schemas.Patch(SchemaBody, CustomerId, SchemaKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Update schema</para>
//    /// <para type="description">Update schema</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectorySchemas -CustomerId $SomeCustomerIdString -SchemaKey $SomeSchemaKeyString -SchemaBody $SomeSchemaObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectorySchemas">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectorySchemas",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/schemas/update")]
//    public class UpdateGDirectorySchemasCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account")]
//        public string CustomerId { get; set; }

//        /// <summary>
//        /// <para type="description">Name or immutable Id of the schema.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name or immutable Id of the schema.")]
//        public string SchemaKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Schema resource in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Schema resource in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Schema SchemaBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Schemas", "Update-GDirectorySchemas"))
//            {

//                 WriteObject(schemas.Update(SchemaBody, CustomerId, SchemaKey));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Tokens
//{


//    /// <summary>
//    /// <para type="synopsis">Delete all access tokens issued by a user for an application.</para>
//    /// <para type="description">Delete all access tokens issued by a user for an application.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryTokens -UserKey $SomeUserKeyString -ClientId $SomeClientIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryTokens">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryTokens",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/tokens/delete")]
//    public class DeleteGDirectoryTokensCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">The Client ID of the application the token is issued to.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The Client ID of the application the token is issued to.")]
//        public string ClientId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Tokens", "Delete-GDirectoryTokens"))
//            {

//                tokens.Delete(UserKey, ClientId);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Get information about an access token issued by a user.</para>
//    /// <para type="description">Get information about an access token issued by a user.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryTokens -UserKey $SomeUserKeyString -ClientId $SomeClientIdString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryTokens">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryTokens",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/tokens/get")]
//    public class GetGDirectoryTokensCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">The Client ID of the application the token is issued to.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The Client ID of the application the token is issued to.")]
//        public string ClientId { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Tokens", "Get-GDirectoryTokens"))
//            {

//                 WriteObject(tokens.Get(UserKey, ClientId));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Returns the set of tokens specified user has issued to 3rd party applications.</para>
//    /// <para type="description">Returns the set of tokens specified user has issued to 3rd party applications.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryTokens -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryTokens">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryTokens",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/tokens/list")]
//    public class ListGDirectoryTokensCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Tokens", "List-GDirectoryTokens"))
//            {

//                 WriteObject(tokens.List(UserKey));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Users
//{


//    /// <summary>
//    /// <para type="synopsis">Delete user</para>
//    /// <para type="description">Delete user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryUsers -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/delete")]
//    public class DeleteGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "Delete-GDirectoryUsers"))
//            {

//                users.Delete(UserKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">retrieve user</para>
//    /// <para type="description">retrieve user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryUsers -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/get")]
//    public class GetGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.")]
//        public string CustomFieldMask { get; set; }

//        /// <summary>
//        /// <para type="description">What subset of fields to fetch for this user.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "What subset of fields to fetch for this user.")]
//        public UsersResource.GetRequest.ProjectionEnum? Projection { get; set; }

//        /// <summary>
//        /// <para type="description">Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.")]
//        public UsersResource.GetRequest.ViewTypeEnum? ViewType { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "Get-GDirectoryUsers"))
//            {

//                var properties = new gDirectory.Users.UsersGetProperties()
//                {
//                    CustomFieldMask = this.CustomFieldMask,
//                    Projection = this.Projection,
//                    ViewType = this.ViewType
//                };


//                 WriteObject(users.Get(UserKey, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">create user.</para>
//    /// <para type="description">create user.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryUsers -UserBody $SomeUserObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/insert")]
//    public class InsertGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">JSON template for User object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for User object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.User UserBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "Insert-GDirectoryUsers"))
//            {

//                 WriteObject(users.Insert(UserBody));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve either deleted users or all users in a domain (paginated)</para>
//    /// <para type="description">Retrieve either deleted users or all users in a domain (paginated)</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryUsers</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/list")]
//    public class ListGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.")]
//        public string CustomFieldMask { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.")]
//        public string Domain { get; set; }

//        /// <summary>
//        /// <para type="description">Event on which subscription is intended (if subscribing)</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Event on which subscription is intended (if subscribing)")]
//        public UsersResource.ListRequest.EventEnum? Event__ { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return. Default is 100. Max allowed is 500</para>
//        /// </summary>
//        [Parameter(Position = 4,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return. Default is 100. Max allowed is 500")]
//        public System.Nullable<int> MaxResults { get; set; }

//        /// <summary>
//        /// <para type="description">Column to use for sorting results</para>
//        /// </summary>
//        [Parameter(Position = 5,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Column to use for sorting results")]
//        public UsersResource.ListRequest.OrderByEnum? OrderBy { get; set; }

//        /// <summary>
//        /// <para type="description">What subset of fields to fetch for this user.</para>
//        /// </summary>
//        [Parameter(Position = 6,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "What subset of fields to fetch for this user.")]
//        public UsersResource.ListRequest.ProjectionEnum? Projection { get; set; }

//        /// <summary>
//        /// <para type="description">Query string search. Should be of the form "". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users</para>
//        /// </summary>
//        [Parameter(Position = 7,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users")]
//        public string Query { get; set; }

//        /// <summary>
//        /// <para type="description">If set to true retrieves the list of deleted users. Default is false</para>
//        /// </summary>
//        [Parameter(Position = 8,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "If set to true retrieves the list of deleted users. Default is false")]
//        public string ShowDeleted { get; set; }

//        /// <summary>
//        /// <para type="description">Whether to return results in ascending or descending order.</para>
//        /// </summary>
//        [Parameter(Position = 9,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Whether to return results in ascending or descending order.")]
//        public UsersResource.ListRequest.SortOrderEnum? SortOrder { get; set; }

//        /// <summary>
//        /// <para type="description">Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.</para>
//        /// </summary>
//        [Parameter(Position = 10,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.")]
//        public UsersResource.ListRequest.ViewTypeEnum? ViewType { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "List-GDirectoryUsers"))
//            {

//                var properties = new gDirectory.Users.UsersListProperties()
//                {
//                    CustomFieldMask = this.CustomFieldMask,
//                    Customer = this.Customer,
//                    Domain = this.Domain,
//                    Event = this.Event__,
//                    OrderBy = this.OrderBy,
//                    Projection = this.Projection,
//                    Query = this.Query,
//                    ShowDeleted = this.ShowDeleted,
//                    SortOrder = this.SortOrder,
//                    ViewType = this.ViewType
//                };


//                 WriteObject(users.List(properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">change admin status of a user</para>
//    /// <para type="description">change admin status of a user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>MakeAdmin-GDirectoryUsers -UserKey $SomeUserKeyString -UserMakeAdminBody $SomeUserMakeAdminObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/MakeAdminGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("MakeAdmin", "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/makeAdmin")]
//    public class MakeAdminGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user as admin</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user as admin")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON request template for setting/revoking admin status of a user in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON request template for setting/revoking admin status of a user in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.UserMakeAdmin UserMakeAdminBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "MakeAdmin-GDirectoryUsers"))
//            {

//                users.MakeAdmin(UserMakeAdminBody, UserKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">update user. This method supports patch semantics.</para>
//    /// <para type="description">update user. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryUsers -UserKey $SomeUserKeyString -UserBody $SomeUserObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/patch")]
//    public class PatchGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user. If Id, it should match with id of user object</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user. If Id, it should match with id of user object")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for User object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for User object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.User UserBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "Patch-GDirectoryUsers"))
//            {

//                 WriteObject(users.Patch(UserBody, UserKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Undelete a deleted user</para>
//    /// <para type="description">Undelete a deleted user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Undelete-GDirectoryUsers -UserKey $SomeUserKeyString -UserUndeleteBody $SomeUserUndeleteObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UndeleteGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Undelete", "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/undelete")]
//    public class UndeleteGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">The immutable id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The immutable id of the user")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON request template to undelete a user in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON request template to undelete a user in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.UserUndelete UserUndeleteBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "Undelete-GDirectoryUsers"))
//            {

//                users.Undelete(UserUndeleteBody, UserKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">update user</para>
//    /// <para type="description">update user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryUsers -UserKey $SomeUserKeyString -UserBody $SomeUserObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/update")]
//    public class UpdateGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user. If Id, it should match with id of user object</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user. If Id, it should match with id of user object")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for User object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for User object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.User UserBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "Update-GDirectoryUsers"))
//            {

//                 WriteObject(users.Update(UserBody, UserKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Watch for changes in users list</para>
//    /// <para type="description">Watch for changes in users list</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Watch-GDirectoryUsers -ChannelBody $SomeChannelObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/WatchGDirectoryUsers">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Watch, "GDirectoryUsers",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/watch")]
//    public class WatchGDirectoryUsersCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">An notification channel used to watch for resource changes.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "An notification channel used to watch for resource changes.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Channel ChannelBody { get; set; }

//        /// <summary>
//        /// <para type="description">Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.")]
//        public string CustomFieldMask { get; set; }

//        /// <summary>
//        /// <para type="description">Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Immutable id of the Google Apps account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.")]
//        public string Customer { get; set; }

//        /// <summary>
//        /// <para type="description">Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.</para>
//        /// </summary>
//        [Parameter(Position = 3,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.")]
//        public string Domain { get; set; }

//        /// <summary>
//        /// <para type="description">Event on which subscription is intended (if subscribing)</para>
//        /// </summary>
//        [Parameter(Position = 4,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Event on which subscription is intended (if subscribing)")]
//        public UsersResource.WatchRequest.EventEnum? Event__ { get; set; }

//        /// <summary>
//        /// <para type="description">Maximum number of results to return. Default is 100. Max allowed is 500</para>
//        /// </summary>
//        [Parameter(Position = 5,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Maximum number of results to return. Default is 100. Max allowed is 500")]
//        public System.Nullable<int> MaxResults { get; set; }

//        /// <summary>
//        /// <para type="description">Column to use for sorting results</para>
//        /// </summary>
//        [Parameter(Position = 6,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Column to use for sorting results")]
//        public UsersResource.WatchRequest.OrderByEnum? OrderBy { get; set; }

//        /// <summary>
//        /// <para type="description">What subset of fields to fetch for this user.</para>
//        /// </summary>
//        [Parameter(Position = 7,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "What subset of fields to fetch for this user.")]
//        public UsersResource.WatchRequest.ProjectionEnum? Projection { get; set; }

//        /// <summary>
//        /// <para type="description">Query string search. Should be of the form "". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users</para>
//        /// </summary>
//        [Parameter(Position = 8,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users")]
//        public string Query { get; set; }

//        /// <summary>
//        /// <para type="description">If set to true retrieves the list of deleted users. Default is false</para>
//        /// </summary>
//        [Parameter(Position = 9,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "If set to true retrieves the list of deleted users. Default is false")]
//        public string ShowDeleted { get; set; }

//        /// <summary>
//        /// <para type="description">Whether to return results in ascending or descending order.</para>
//        /// </summary>
//        [Parameter(Position = 10,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Whether to return results in ascending or descending order.")]
//        public UsersResource.WatchRequest.SortOrderEnum? SortOrder { get; set; }

//        /// <summary>
//        /// <para type="description">Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.</para>
//        /// </summary>
//        [Parameter(Position = 11,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.")]
//        public UsersResource.WatchRequest.ViewTypeEnum? ViewType { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Users", "Watch-GDirectoryUsers"))
//            {

//                var properties = new gDirectory.Users.UsersWatchProperties()
//                {
//                    CustomFieldMask = this.CustomFieldMask,
//                    Customer = this.Customer,
//                    Domain = this.Domain,
//                    Event = this.Event__,
//                    OrderBy = this.OrderBy,
//                    Projection = this.Projection,
//                    Query = this.Query,
//                    ShowDeleted = this.ShowDeleted,
//                    SortOrder = this.SortOrder,
//                    ViewType = this.ViewType
//                };


//                 WriteObject(users.Watch(ChannelBody, properties));
//            }

//        }
//    }

//}


//namespace gShell.Cmdlets.Directory.Users.Aliases
//{


//    /// <summary>
//    /// <para type="synopsis">Remove a alias for the user</para>
//    /// <para type="description">Remove a alias for the user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryAliases -UserKey $SomeUserKeyString -Alias $SomeAliasString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/aliases/delete")]
//    public class DeleteGDirectoryAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">The alias to be removed</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "The alias to be removed")]
//        public string Alias { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Aliases", "Delete-GDirectoryAliases"))
//            {

//                users.aliases.Delete(UserKey, Alias);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Add a alias for the user</para>
//    /// <para type="description">Add a alias for the user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Insert-GDirectoryAliases -UserKey $SomeUserKeyString -AliasBody $SomeAliasObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InsertGDirectoryAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Insert", "GDirectoryAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/aliases/insert")]
//    public class InsertGDirectoryAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Alias object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Alias object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Alias AliasBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Aliases", "Insert-GDirectoryAliases"))
//            {

//                 WriteObject(users.aliases.Insert(AliasBody, UserKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">List all aliases for a user</para>
//    /// <para type="description">List all aliases for a user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryAliases -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/aliases/list")]
//    public class ListGDirectoryAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">Event on which subscription is intended (if subscribing)</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Event on which subscription is intended (if subscribing)")]
//        public UsersResource.AliasesResource.ListRequest.EventEnum? Event__ { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Aliases", "List-GDirectoryAliases"))
//            {

//                var properties = new gDirectory.Users.Aliases.AliasesListProperties()
//                {
//                    Event = this.Event__
//                };


//                 WriteObject(users.aliases.List(UserKey, properties));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Watch for changes in user aliases list</para>
//    /// <para type="description">Watch for changes in user aliases list</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Watch-GDirectoryAliases -UserKey $SomeUserKeyString -ChannelBody $SomeChannelObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/WatchGDirectoryAliases">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Watch, "GDirectoryAliases",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/aliases/watch")]
//    public class WatchGDirectoryAliasesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">An notification channel used to watch for resource changes.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "An notification channel used to watch for resource changes.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.Channel ChannelBody { get; set; }

//        /// <summary>
//        /// <para type="description">Event on which subscription is intended (if subscribing)</para>
//        /// </summary>
//        [Parameter(Position = 2,
//        Mandatory = false,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Event on which subscription is intended (if subscribing)")]
//        public UsersResource.AliasesResource.WatchRequest.EventEnum? Event__ { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Aliases", "Watch-GDirectoryAliases"))
//            {

//                var properties = new gDirectory.Users.Aliases.AliasesWatchProperties()
//                {
//                    Event = this.Event__
//                };


//                 WriteObject(users.aliases.Watch(ChannelBody, UserKey, properties));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.Users.Photos
//{


//    /// <summary>
//    /// <para type="synopsis">Remove photos for the user</para>
//    /// <para type="description">Remove photos for the user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Delete-GDirectoryPhotos -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/DeleteGDirectoryPhotos">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Delete", "GDirectoryPhotos",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/photos/delete")]
//    public class DeleteGDirectoryPhotosCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Photos", "Delete-GDirectoryPhotos"))
//            {

//                users.photos.Delete(UserKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Retrieve photo of a user</para>
//    /// <para type="description">Retrieve photo of a user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Get-GDirectoryPhotos -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GetGDirectoryPhotos">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsCommon.Get, "GDirectoryPhotos",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/photos/get")]
//    public class GetGDirectoryPhotosCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Photos", "Get-GDirectoryPhotos"))
//            {

//                 WriteObject(users.photos.Get(UserKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Add a photo for the user. This method supports patch semantics.</para>
//    /// <para type="description">Add a photo for the user. This method supports patch semantics.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Patch-GDirectoryPhotos -UserKey $SomeUserKeyString -UserPhotoBody $SomeUserPhotoObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/PatchGDirectoryPhotos">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Patch", "GDirectoryPhotos",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/photos/patch")]
//    public class PatchGDirectoryPhotosCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Photo object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Photo object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.UserPhoto UserPhotoBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Photos", "Patch-GDirectoryPhotos"))
//            {

//                 WriteObject(users.photos.Patch(UserPhotoBody, UserKey));
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Add a photo for the user</para>
//    /// <para type="description">Add a photo for the user</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Update-GDirectoryPhotos -UserKey $SomeUserKeyString -UserPhotoBody $SomeUserPhotoObj</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/UpdateGDirectoryPhotos">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet(VerbsData.Update, "GDirectoryPhotos",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/users/photos/update")]
//    public class UpdateGDirectoryPhotosCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }

//        /// <summary>
//        /// <para type="description">JSON template for Photo object in Directory API.</para>
//        /// </summary>
//        [Parameter(Position = 1,
//        Mandatory = false,
//        ValueFromPipeline = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "JSON template for Photo object in Directory API.")]
//        public Google.Apis.admin.Directory.directory_v1.Data.UserPhoto UserPhotoBody { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory Photos", "Update-GDirectoryPhotos"))
//            {

//                 WriteObject(users.photos.Update(UserPhotoBody, UserKey));
//            }

//        }
//    }

//}

//namespace gShell.Cmdlets.Directory.VerificationCodes
//{


//    /// <summary>
//    /// <para type="synopsis">Generate new backup verification codes for the user.</para>
//    /// <para type="description">Generate new backup verification codes for the user.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Generate-GDirectoryVerificationCodes -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/GenerateGDirectoryVerificationCodes">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Generate", "GDirectoryVerificationCodes",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/verificationCodes/generate")]
//    public class GenerateGDirectoryVerificationCodesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory VerificationCodes", "Generate-GDirectoryVerificationCodes"))
//            {

//                verificationCodes.Generate(UserKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Invalidate the current backup verification codes for the user.</para>
//    /// <para type="description">Invalidate the current backup verification codes for the user.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>Invalidate-GDirectoryVerificationCodes -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/InvalidateGDirectoryVerificationCodes">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("Invalidate", "GDirectoryVerificationCodes",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/verificationCodes/invalidate")]
//    public class InvalidateGDirectoryVerificationCodesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Email or immutable Id of the user</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Email or immutable Id of the user")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory VerificationCodes", "Invalidate-GDirectoryVerificationCodes"))
//            {

//                verificationCodes.Invalidate(UserKey);
//            }

//        }
//    }
//    /// <summary>
//    /// <para type="synopsis">Returns the current set of valid backup verification codes for the specified user.</para>
//    /// <para type="description">Returns the current set of valid backup verification codes for the specified user.</para>
//    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
//    /// Part of the gShell Project, relating to the Google Directory API; see Related Links or use the -Online parameter.
//    /// </description></item></list>
//    /// <example>
//    ///   <code>PS C:\>List-GDirectoryVerificationCodes -UserKey $SomeUserKeyString</code>
//    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
//    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
//    /// </example>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/ListGDirectoryVerificationCodes">[Wiki page for this Cmdlet]</para>
//    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
//    /// </summary>
//    [Cmdlet("List", "GDirectoryVerificationCodes",
//    SupportsShouldProcess = true,

//      HelpUri = @"https://developers.google.com/admin-sdk/directory/directory_v1/reference/verificationCodes/list")]
//    public class ListGDirectoryVerificationCodesCommand : DirectoryServiceAccountBase
//    {
//        #region Properties


//        /// <summary>
//        /// <para type="description">Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.</para>
//        /// </summary>
//        [Parameter(Position = 0,
//        Mandatory = true,
//        ValueFromPipelineByPropertyName = true,
//        HelpMessage = "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.")]
//        public string UserKey { get; set; }
//        #endregion

//        protected override void ProcessRecord()
//        {

//            if (ShouldProcess("Directory VerificationCodes", "List-GDirectoryVerificationCodes"))
//            {

//                 WriteObject(verificationCodes.List(UserKey));
//            }

//        }
//    }

//}