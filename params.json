{"name":"Gshell","tagline":"PowerShell Cmdlets for Google Apps and Gmail","body":"![gShell Logo](http://i.imgur.com/CkAV8GJ.png)\r\n##Welcome to gShell!\r\ngShell is here to help you access and manage information from your Google Apps domain through the PowerShell scripting language. Please keep an eye on the [Wiki](https://github.com/squid808/gShell/wiki) for what is available; this is a work in progress done in my spare time, so things are added irregularly but as frequently as possible. Did I mention your hair looks great today?\r\n\r\n####What's New?\r\nVersion 0.0.5.0 is almost released with a better-than-ever installer, new *GAUserProperties cmdlets that let you add, edit and (almost) remove extended properties, and a brand new wiki with a ton of content. The cmdlets will use the built-in Online Help feature that will redirect you to the appropriate web page to get the help, and will try to stay web-based since you need to be online to use them anyways.\r\n\r\nWant to help make this project even better? I'm looking for contributors in the following areas:\r\n* Writing code and submitting bug-fixes or new or expanded functionality\r\n* Writing documentation for the wiki or for the help xml files, especially with examples and usage information\r\n* Identifying bugs and things that need fixing\r\n* Ideas on how to make it better and what to add next!\r\n\r\nAs always if you're interested or have any thoughts or questions, head on over to the [Discussion Groups](https://github.com/squid808/gShell/wiki/Discussion-Groups) and let me know!\r\n\r\n####Quick Examples\r\nThe goal of gShell is to allow you quick and easy access to your Google Apps domain. Down the road, I hope to expand it to include additional google APIs that can be used with _ANY_ Google-based account. Check out some of the following examples to see how this can be helpful to you, once you get past the _quick setup_.\r\n\r\nFirst, you can grab a user from your domain and get it back as a _GAUser_ object:\r\n```\r\nPS C:\\> Get-GAUser BMcGee mydomain.com\r\n\r\nGivenName     : Bobby\r\nFamilyName    : McGee\r\nPrimaryEmail  : bmcgee@mydomain.com\r\nAliases       : {bobbymcgee@mydomain.com, bobmcgee@mydomain.com}\r\nSuspended     : False\r\nOrgUnitPath   : /\r\nLastLoginTime : 2013-10-25T05:10:40.000Z\r\n```\r\nOr, you can elect to get all users in the domain and throw them in a variable, perhaps to compare against your AD Environment:\r\n\r\n```\r\nPS C:\\> $AllUsers = Get-GAUser -all\r\n\r\n----\r\nPS C:\\> $AllUsers.Count\r\n\r\n9001\r\n```\r\n\r\nBetter yet, perhaps you need to get a list of all users in all groups? in the domain...\r\n```\r\nPS C:\\> $AllGroups = Get-GAGroup mydomain.com -All -Members -Owners\r\n#A progress bar will show up for this, since it's potentially a long wait\r\n\r\n----\r\nPS C:\\> $AllGroups.Count\r\n\r\n42\r\n```\r\n...or you want to find all members of all groups, and throw that in a list for easy export to CSV? Got that covered:\r\n\r\n```\r\nPS C:\\> $AllMembers = (Get-GAGroupMember -All).ToSingleList()\r\n\r\n----\r\nPS C:\\> $AllMembers[0]\r\n\r\nEmail : bobbymcgee@mydomain.com\r\nETag  : \"01...HQ\"\r\nId    : 12..89\r\nKind  : admin#directory#member\r\nRole  : MEMBER\r\nType  : USER\r\nGroup : songcharacters@mydomain.com\r\n\r\n----\r\nPS C:\\> $AllMembers | Export-Csv -Path \"C:\\AllGroupMemberships.csv\" -NoTypeInformation\r\n\r\n----\r\nPS C:\\> (Get-Content \"C:\\AllDomainGroupMemberships.csv\")[0..1]\r\n#Let's look directly at the CSV file...\r\n\r\n\"Email\",\"ETag\",\"Id\",\"Kind\",\"Role\",\"Type\",\"Group\"\r\n,\"\"\"01..HQ\"\"\",\"12..89\",\"admin#directory#member\",\"MEMBER\",\"USER\"\r\n,\"songcharacters@mydomain.com\"\r\n```\r\n\r\nThis is the tip of the iceberg of what's possible and what's available. If you need help or have questions, requests or you found a bug, drop a line in the [Discussion Groups](https://github.com/squid808/gShell/wiki/Discussion-Groups).","google":"UA-58705092-1","note":"Don't delete this file! It's used internally to help with page regeneration."}